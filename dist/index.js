define("@validapp/sc-core", (require, exports)=>{
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module2) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", module2 && module2.__esModule && "default" in module2 ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};

// src/index.ts
__export(exports, {
  Contracts: () => contracts_exports
});

// src/contracts/index.ts
var contracts_exports = {};
__export(contracts_exports, {
  AuditorInfo: () => AuditorInfo,
  Authorization: () => Authorization,
  DomainInfo: () => DomainInfo,
  ERC20: () => ERC20,
  ModuleInfo: () => ModuleInfo,
  ProjectInfo: () => ProjectInfo,
  Scom: () => Scom
});

// src/contracts/@openzeppelin/contracts/token/ERC20/ERC20.ts
var import_eth_wallet = __toModule(require("@ijstech/eth-wallet"));

// src/contracts/@openzeppelin/contracts/token/ERC20/ERC20.json.ts
var ERC20_json_default = {
  "abi": [
    { "inputs": [{ "internalType": "string", "name": "name_", "type": "string" }, { "internalType": "string", "name": "symbol_", "type": "string" }], "stateMutability": "nonpayable", "type": "constructor" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "spender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Approval", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Transfer", "type": "event" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }], "name": "allowance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "approve", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "subtractedValue", "type": "uint256" }], "name": "decreaseAllowance", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "addedValue", "type": "uint256" }], "name": "increaseAllowance", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "totalSupply", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "transfer", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "transferFrom", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" }
  ],
  "bytecode": "60806040523480156200001157600080fd5b5060405162000dfa38038062000dfa8339810160408190526200003491620001db565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b50505062000281565b828054620000769062000245565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013657600080fd5b81516001600160401b03808211156200015357620001536200010e565b604051601f8301601f19908116603f011681019082821181831017156200017e576200017e6200010e565b816040528381526020925086838588010111156200019b57600080fd5b600091505b83821015620001bf5785820183015181830184015290820190620001a0565b83821115620001d15760008385830101525b9695505050505050565b60008060408385031215620001ef57600080fd5b82516001600160401b03808211156200020757600080fd5b620002158683870162000124565b935060208501519150808211156200022c57600080fd5b506200023b8582860162000124565b9150509250929050565b600181811c908216806200025a57607f821691505b6020821081036200027b57634e487b7160e01b600052602260045260246000fd5b50919050565b610b6980620002916000396000f3fe608060405234801561001057600080fd5b50600436106100c95760003560e01c80633950935111610081578063a457c2d71161005b578063a457c2d714610194578063a9059cbb146101a7578063dd62ed3e146101ba57600080fd5b8063395093511461014357806370a082311461015657806395d89b411461018c57600080fd5b806318160ddd116100b257806318160ddd1461010f57806323b872dd14610121578063313ce5671461013457600080fd5b806306fdde03146100ce578063095ea7b3146100ec575b600080fd5b6100d6610200565b6040516100e3919061094a565b60405180910390f35b6100ff6100fa3660046109e6565b610292565b60405190151581526020016100e3565b6002545b6040519081526020016100e3565b6100ff61012f366004610a10565b6102aa565b604051601281526020016100e3565b6100ff6101513660046109e6565b6102ce565b610113610164366004610a4c565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b6100d661031a565b6100ff6101a23660046109e6565b610329565b6100ff6101b53660046109e6565b6103ff565b6101136101c8366004610a6e565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60606003805461020f90610aa1565b80601f016020809104026020016040519081016040528092919081815260200182805461023b90610aa1565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b6000336102a081858561040d565b5060019392505050565b6000336102b88582856105c0565b6102c3858585610697565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff871684529091528120549091906102a09082908690610315908790610af4565b61040d565b60606004805461020f90610aa1565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168452909152812054909190838110156103f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f00000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102c3828686840361040d565b6000336102a0818585610697565b73ffffffffffffffffffffffffffffffffffffffff83166104af576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f726573730000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff8216610552576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f737300000000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146106915781811015610684576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103e9565b610691848484840361040d565b50505050565b73ffffffffffffffffffffffffffffffffffffffff831661073a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f647265737300000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff82166107dd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f657373000000000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e6365000000000000000000000000000000000000000000000000000060648201526084016103e9565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152602081905260408082208585039055918516815290812080548492906108d7908490610af4565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161093d91815260200190565b60405180910390a3610691565b600060208083528351808285015260005b818110156109775785810183015185820160400152820161095b565b81811115610989576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109e157600080fd5b919050565b600080604083850312156109f957600080fd5b610a02836109bd565b946020939093013593505050565b600080600060608486031215610a2557600080fd5b610a2e846109bd565b9250610a3c602085016109bd565b9150604084013590509250925092565b600060208284031215610a5e57600080fd5b610a67826109bd565b9392505050565b60008060408385031215610a8157600080fd5b610a8a836109bd565b9150610a98602084016109bd565b90509250929050565b600181811c90821680610ab557607f821691505b602082108103610aee577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008219821115610b2e577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b50019056fea2646970667358221220183f5564192fd291686f36af9caf2192c6e19b9560389f9779034995e310a55b64736f6c634300080d0033"
};

// src/contracts/@openzeppelin/contracts/token/ERC20/ERC20.ts
var ERC20 = class extends import_eth_wallet.Contract {
  constructor(wallet, address) {
    super(wallet, address, ERC20_json_default.abi, ERC20_json_default.bytecode);
    this.assign();
  }
  deploy(params) {
    return this.__deploy([params.name, params.symbol]);
  }
  parseApprovalEvent(receipt) {
    return this.parseEvents(receipt, "Approval").map((e) => this.decodeApprovalEvent(e));
  }
  decodeApprovalEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      spender: result.spender,
      value: new import_eth_wallet.BigNumber(result.value),
      _event: event
    };
  }
  parseTransferEvent(receipt) {
    return this.parseEvents(receipt, "Transfer").map((e) => this.decodeTransferEvent(e));
  }
  decodeTransferEvent(event) {
    let result = event.data;
    return {
      from: result.from,
      to: result.to,
      value: new import_eth_wallet.BigNumber(result.value),
      _event: event
    };
  }
  assign() {
    let allowanceParams = (params) => [params.owner, params.spender];
    let allowance_call = async (params) => {
      let result = await this.call("allowance", allowanceParams(params));
      return new import_eth_wallet.BigNumber(result);
    };
    this.allowance = allowance_call;
    let balanceOf_call = async (account) => {
      let result = await this.call("balanceOf", [account]);
      return new import_eth_wallet.BigNumber(result);
    };
    this.balanceOf = balanceOf_call;
    let decimals_call = async () => {
      let result = await this.call("decimals");
      return new import_eth_wallet.BigNumber(result);
    };
    this.decimals = decimals_call;
    let name_call = async () => {
      let result = await this.call("name");
      return result;
    };
    this.name = name_call;
    let symbol_call = async () => {
      let result = await this.call("symbol");
      return result;
    };
    this.symbol = symbol_call;
    let totalSupply_call = async () => {
      let result = await this.call("totalSupply");
      return new import_eth_wallet.BigNumber(result);
    };
    this.totalSupply = totalSupply_call;
    let approveParams = (params) => [params.spender, import_eth_wallet.Utils.toString(params.amount)];
    let approve_send = async (params) => {
      let result = await this.send("approve", approveParams(params));
      return result;
    };
    let approve_call = async (params) => {
      let result = await this.call("approve", approveParams(params));
      return result;
    };
    this.approve = Object.assign(approve_send, {
      call: approve_call
    });
    let decreaseAllowanceParams = (params) => [params.spender, import_eth_wallet.Utils.toString(params.subtractedValue)];
    let decreaseAllowance_send = async (params) => {
      let result = await this.send("decreaseAllowance", decreaseAllowanceParams(params));
      return result;
    };
    let decreaseAllowance_call = async (params) => {
      let result = await this.call("decreaseAllowance", decreaseAllowanceParams(params));
      return result;
    };
    this.decreaseAllowance = Object.assign(decreaseAllowance_send, {
      call: decreaseAllowance_call
    });
    let increaseAllowanceParams = (params) => [params.spender, import_eth_wallet.Utils.toString(params.addedValue)];
    let increaseAllowance_send = async (params) => {
      let result = await this.send("increaseAllowance", increaseAllowanceParams(params));
      return result;
    };
    let increaseAllowance_call = async (params) => {
      let result = await this.call("increaseAllowance", increaseAllowanceParams(params));
      return result;
    };
    this.increaseAllowance = Object.assign(increaseAllowance_send, {
      call: increaseAllowance_call
    });
    let transferParams = (params) => [params.to, import_eth_wallet.Utils.toString(params.amount)];
    let transfer_send = async (params) => {
      let result = await this.send("transfer", transferParams(params));
      return result;
    };
    let transfer_call = async (params) => {
      let result = await this.call("transfer", transferParams(params));
      return result;
    };
    this.transfer = Object.assign(transfer_send, {
      call: transfer_call
    });
    let transferFromParams = (params) => [params.from, params.to, import_eth_wallet.Utils.toString(params.amount)];
    let transferFrom_send = async (params) => {
      let result = await this.send("transferFrom", transferFromParams(params));
      return result;
    };
    let transferFrom_call = async (params) => {
      let result = await this.call("transferFrom", transferFromParams(params));
      return result;
    };
    this.transferFrom = Object.assign(transferFrom_send, {
      call: transferFrom_call
    });
  }
};

// src/contracts/AuditorInfo.ts
var import_eth_wallet2 = __toModule(require("@ijstech/eth-wallet"));

// src/contracts/AuditorInfo.json.ts
var AuditorInfo_json_default = {
  "abi": [
    { "inputs": [{ "internalType": "contract IERC20", "name": "_token", "type": "address" }, { "internalType": "uint256", "name": "_cooldownPeriod", "type": "uint256" }], "stateMutability": "nonpayable", "type": "constructor" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "auditor", "type": "address" }], "name": "AddAuditor", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Authorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Deauthorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "auditor", "type": "address" }], "name": "DisableAuditor", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "uint256", "name": "cooldownPeriod", "type": "uint256" }], "name": "SetCooldownPeriod", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "sender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256" }], "name": "StakeBond", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "StartOwnershipTransfer", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "TransferOwnership", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "sender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256" }], "name": "UnstakeBondRequest", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "sender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "WithdrawBond", "type": "event" },
    { "inputs": [], "name": "MAX_COOLDOWN_PERIOD", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "auditor", "type": "address" }], "name": "addAuditor", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "auditorBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "auditorIdCount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "auditorIds", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "auditorsData", "outputs": [{ "internalType": "address", "name": "auditor", "type": "address" }, { "internalType": "enum AuditorInfo.AuditorStatus", "name": "status", "type": "uint8" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "cooldownPeriod", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "deny", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "auditor", "type": "address" }], "name": "disableAuditor", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "auditorIdStart", "type": "uint256" }, { "internalType": "uint256", "name": "length", "type": "uint256" }], "name": "getAuditors", "outputs": [{ "components": [{ "internalType": "address", "name": "auditor", "type": "address" }, { "internalType": "enum AuditorInfo.AuditorStatus", "name": "status", "type": "uint8" }], "internalType": "struct AuditorInfo.AuditorData[]", "name": "auditors", "type": "tuple[]" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "isActiveAuditor", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "isPermitted", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "newOwner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "pendingWithdrawal", "outputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }, { "internalType": "uint256", "name": "releaseTime", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "_cooldownPeriod", "type": "uint256" }], "name": "setCooldownPeriod", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "stakeBond", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "takeOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "token", "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "newOwner_", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "unstakeBondRequest", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "withdrawBond", "outputs": [], "stateMutability": "nonpayable", "type": "function" }
  ],
  "bytecode": "60a060405234801561001057600080fd5b50604051611fc3380380611fc383398101604081905261002f9161005d565b600080546001600160a01b0319163317905560016003556001600160a01b0391909116608052600555610097565b6000806040838503121561007057600080fd5b82516001600160a01b038116811461008757600080fd5b6020939093015192949293505050565b608051611eee6100d5600039600081816104180152818161097d01528181610bce015281816115b00152818161164c01526116a40152611eee6000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806380ea3de1116100e3578063bcdb851d1161008c578063f2fde38b11610066578063f2fde38b146103ed578063f5d0278414610400578063fc0c546a1461041357600080fd5b8063bcdb851d146103b1578063d4ee1d90146103ba578063e429cef1146103da57600080fd5b80639c52a7f1116100bd5780639c52a7f114610378578063a2f55ae51461038b578063b7419ee11461039e57600080fd5b806380ea3de1146103005780638c345172146103135780638da5cb5b1461033357600080fd5b80635f3416fb1161014557806366eb9cec1161011f57806366eb9cec146102c557806369b68f20146102cd57806377903d72146102e057600080fd5b80635f3416fb1461023c578063605361721461025c57806360c4aa1f1461026457600080fd5b806313d5e8861161017657806313d5e886146101c35780633fd8cc4e146101ff578063556d1a091461023257600080fd5b806304646a49146101925780630f1c6ec6146101ae575b600080fd5b61019b60055481565b6040519081526020015b60405180910390f35b6101c16101bc366004611b7d565b61043a565b005b6101ea6101d1366004611b7d565b6009602052600090815260409020805460019091015482565b604080519283526020830191909152016101a5565b61022261020d366004611b96565b60026020526000908152604090205460ff1681565b60405190151581526020016101a5565b61019b62093a8081565b61019b61024a366004611b96565b60076020526000908152604090205481565b6101c1610667565b6102b7610272366004611b7d565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900460ff1682565b6040516101a5929190611c36565b6101c1610791565b6101c16102db366004611b7d565b6109d6565b6102f36102ee366004611c60565b610ca2565b6040516101a59190611c82565b6101c161030e366004611b7d565b610e0b565b61019b610321366004611b7d565b60086020526000908152604090205481565b6000546103539073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101a5565b6101c1610386366004611b96565b610ed8565b6101c1610399366004611b96565b610f78565b6102226103ac366004611b96565b61101b565b61019b60045481565b6001546103539073ffffffffffffffffffffffffffffffffffffffff1681565b6101c16103e8366004611b96565b611090565b6101c16103fb366004611b96565b611310565b6101c161040e366004611b96565b6113a7565b6103537f000000000000000000000000000000000000000000000000000000000000000081565b33600090815260076020526040902054801580159061049257506000808281526006602052604090205474010000000000000000000000000000000000000000900460ff16600181111561049057610490611bcc565b145b6104fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6e6f742066726f6d206163746976652061756469746f7200000000000000000060448201526064015b60405180910390fd5b600260035403610569576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f4565b6002600355816105d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f616d6f756e74203d20300000000000000000000000000000000000000000000060448201526064016104f4565b6105de8261157f565b3360009081526007602090815260408083205480845260089092528220549294509161060b908590611d1f565b600083815260086020908152604091829020839055815187815290810183905291925033917fef09830aa6d9761a05de9164a872a4bdc0fcf49518db2cf33b7ec0fbac8c24a391015b60405180910390a2505060016003555050565b60015473ffffffffffffffffffffffffffffffffffffffff16331461070e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f416374696f6e20706572666f726d656420627920756e617574686f72697a656460448201527f20616464726573732e000000000000000000000000000000000000000000000060648201526084016104f4565b600180546000805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040519081527fcfaaa26691e16e66e73290fc725eee1a6b4e0e693a1640484937aac25ffb55a49060200160405180910390a1565b3360009081526007602052604090205480158015906107e957506000808281526006602052604090205474010000000000000000000000000000000000000000900460ff1660018111156107e7576107e7611bcc565b145b61084f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6e6f742066726f6d206163746976652061756469746f7200000000000000000060448201526064016104f4565b6002600354036108bb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f4565b6002600355336000908152600760209081526040808320548084526009909252909120600181015442101561094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f706c65617365207761697400000000000000000000000000000000000000000060448201526064016104f4565b80546000838152600960205260408120818155600101556109a473ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163383611734565b60405181815233907f1e85dc785ce23b2937c3586b4fe81fb37118b9318e9203bea983f2c5bb6ca59590602001610654565b336000908152600760205260409020548015801590610a2e57506000808281526006602052604090205474010000000000000000000000000000000000000000900460ff166001811115610a2c57610a2c611bcc565b145b610a94576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6e6f742066726f6d206163746976652061756469746f7200000000000000000060448201526064016104f4565b600260035403610b00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104f4565b600260035581610b6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f616d6f756e74203d20300000000000000000000000000000000000000000000060448201526064016104f4565b336000908152600760209081526040808320548084526008909252822054909190610b98908590611d37565b600083815260086020526040812082905560055491925003610c2f57610bf573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163386611734565b60405184815233907f1e85dc785ce23b2937c3586b4fe81fb37118b9318e9203bea983f2c5bb6ca5959060200160405180910390a2610c6a565b6000828152600960205260408120805490918691839190610c51908490611d1f565b9091555050600554610c639042611d1f565b6001909101555b604080518581526020810183905233917fb598aaefbe74e8588e20f67924733ccc5a3aa971e912603f0e2dd34d516cf7fc9101610654565b60606004546001610cb39190611d1f565b610cbd8385611d1f565b1115610cdf5782600454610cd19190611d37565b610cdc906001611d1f565b91505b8167ffffffffffffffff811115610cf857610cf8611d4e565b604051908082528060200260200182016040528015610d3d57816020015b6040805180820190915260008082526020820152815260200190600190039081610d165790505b50905060005b82811015610e04576000848152600660209081526040918290208251808401909352805473ffffffffffffffffffffffffffffffffffffffff81168452909183019074010000000000000000000000000000000000000000900460ff166001811115610db157610db1611bcc565b6001811115610dc257610dc2611bcc565b81525050828281518110610dd857610dd8611d7d565b60200260200101819052508380610dee90611dac565b9450508080610dfc90611dac565b915050610d43565b5092915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610e2f57600080fd5b62093a80811115610e9c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d617820636f6f6c646f776e20706572696f64203e2031207765656b2100000060448201526064016104f4565b60058190556040518181527f94714a16ed27a5dc1201f16c27868fa024cb3b7420dd30baa7d06854c4cc54b3906020015b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610efc57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f79ede3839cd7a7d8bd77e97e5c890565fe4f76cdbbeaa364646e28a8695a78849101610ecd565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f9c57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f6d81a01b39982517ba331aeb4f387b0f9cc32334b65bb9a343a077973cf7adf59101610ecd565b73ffffffffffffffffffffffffffffffffffffffff8116600090815260076020526040812054801580159061108957506000808281526006602052604090205474010000000000000000000000000000000000000000900460ff16600181111561108757611087611bcc565b145b9392505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146110b457600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116600090815260076020526040812054908190036111ff576004600081546110f190611dac565b91829055506040805180820190915273ffffffffffffffffffffffffffffffffffffffff84168152909150602081016000905260008281526006602090815260409091208251815473ffffffffffffffffffffffffffffffffffffffff9091167fffffffffffffffffffffffff000000000000000000000000000000000000000082168117835592840151919283917fffffffffffffffffffffff0000000000000000000000000000000000000000001617740100000000000000000000000000000000000000008360018111156111cb576111cb611bcc565b0217905550505073ffffffffffffffffffffffffffffffffffffffff821660009081526007602052604090208190556112cb565b60008181526006602052604090206001815474010000000000000000000000000000000000000000900460ff16600181111561123d5761123d611bcc565b146112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f61756469746f7220616c7265616479206578697374730000000000000000000060448201526064016104f4565b80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff1690555b60405173ffffffffffffffffffffffffffffffffffffffff8316907fed1ecf94eb5bfce7b0aaeb460f42f04a1844abdd664b74d4144d81006800088290600090a25050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461133457600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f686a7ab184e6928ddedba810af7b443d6baa40bf32c4787ccd72c5b4b28cae1b90602001610ecd565b60005473ffffffffffffffffffffffffffffffffffffffff1633146113cb57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660009081526007602052604090205480611458576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f61756469746f72206e6f7420657869737400000000000000000000000000000060448201526064016104f4565b600081815260066020526040812090815474010000000000000000000000000000000000000000900460ff16600181111561149557611495611bcc565b146114fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f61756469746f7220616c72656164792064697361626c6564000000000000000060448201526064016104f4565b80547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff167401000000000000000000000000000000000000000017815560405173ffffffffffffffffffffffffffffffffffffffff8416907ff275d9cb928f95f37ce1edc602232801d265d6f9499e2bd2b68775168f4267db90600090a2505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561160c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116309190611de4565b905061167473ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633308561180d565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015611700573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117249190611de4565b61172e9190611d37565b92915050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526118089084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611871565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff8085166024830152831660448201526064810182905261186b9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611786565b50505050565b60006118d3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661197d9092919063ffffffff16565b80519091501561180857808060200190518101906118f19190611dfd565b611808576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104f4565b606061198c8484600085611994565b949350505050565b606082471015611a26576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016104f4565b73ffffffffffffffffffffffffffffffffffffffff85163b611aa4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104f4565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611acd9190611e4b565b60006040518083038185875af1925050503d8060008114611b0a576040519150601f19603f3d011682016040523d82523d6000602084013e611b0f565b606091505b5091509150611b1f828286611b2a565b979650505050505050565b60608315611b39575081611089565b825115611b495782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104f49190611e67565b600060208284031215611b8f57600080fd5b5035919050565b600060208284031215611ba857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461108957600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611c32577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b73ffffffffffffffffffffffffffffffffffffffff83168152604081016110896020830184611bfb565b60008060408385031215611c7357600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b82811015611ce3578151805173ffffffffffffffffffffffffffffffffffffffff168552860151611cd287860182611bfb565b509284019290850190600101611c9f565b5091979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008219821115611d3257611d32611cf0565b500190565b600082821015611d4957611d49611cf0565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ddd57611ddd611cf0565b5060010190565b600060208284031215611df657600080fd5b5051919050565b600060208284031215611e0f57600080fd5b8151801515811461108957600080fd5b60005b83811015611e3a578181015183820152602001611e22565b8381111561186b5750506000910152565b60008251611e5d818460208701611e1f565b9190910192915050565b6020815260008251806020840152611e86816040850160208701611e1f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220b892a9f770ef8fac47443ccd5320ff6b76e3a609247eef219385d1cc8962de3764736f6c634300080d0033"
};

// src/contracts/AuditorInfo.ts
var AuditorInfo = class extends import_eth_wallet2.Contract {
  constructor(wallet, address) {
    super(wallet, address, AuditorInfo_json_default.abi, AuditorInfo_json_default.bytecode);
    this.assign();
  }
  deploy(params) {
    return this.__deploy([params.token, import_eth_wallet2.Utils.toString(params.cooldownPeriod)]);
  }
  parseAddAuditorEvent(receipt) {
    return this.parseEvents(receipt, "AddAuditor").map((e) => this.decodeAddAuditorEvent(e));
  }
  decodeAddAuditorEvent(event) {
    let result = event.data;
    return {
      auditor: result.auditor,
      _event: event
    };
  }
  parseAuthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Authorize").map((e) => this.decodeAuthorizeEvent(e));
  }
  decodeAuthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseDeauthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Deauthorize").map((e) => this.decodeDeauthorizeEvent(e));
  }
  decodeDeauthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseDisableAuditorEvent(receipt) {
    return this.parseEvents(receipt, "DisableAuditor").map((e) => this.decodeDisableAuditorEvent(e));
  }
  decodeDisableAuditorEvent(event) {
    let result = event.data;
    return {
      auditor: result.auditor,
      _event: event
    };
  }
  parseSetCooldownPeriodEvent(receipt) {
    return this.parseEvents(receipt, "SetCooldownPeriod").map((e) => this.decodeSetCooldownPeriodEvent(e));
  }
  decodeSetCooldownPeriodEvent(event) {
    let result = event.data;
    return {
      cooldownPeriod: new import_eth_wallet2.BigNumber(result.cooldownPeriod),
      _event: event
    };
  }
  parseStakeBondEvent(receipt) {
    return this.parseEvents(receipt, "StakeBond").map((e) => this.decodeStakeBondEvent(e));
  }
  decodeStakeBondEvent(event) {
    let result = event.data;
    return {
      sender: result.sender,
      amount: new import_eth_wallet2.BigNumber(result.amount),
      newBalance: new import_eth_wallet2.BigNumber(result.newBalance),
      _event: event
    };
  }
  parseStartOwnershipTransferEvent(receipt) {
    return this.parseEvents(receipt, "StartOwnershipTransfer").map((e) => this.decodeStartOwnershipTransferEvent(e));
  }
  decodeStartOwnershipTransferEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseTransferOwnershipEvent(receipt) {
    return this.parseEvents(receipt, "TransferOwnership").map((e) => this.decodeTransferOwnershipEvent(e));
  }
  decodeTransferOwnershipEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseUnstakeBondRequestEvent(receipt) {
    return this.parseEvents(receipt, "UnstakeBondRequest").map((e) => this.decodeUnstakeBondRequestEvent(e));
  }
  decodeUnstakeBondRequestEvent(event) {
    let result = event.data;
    return {
      sender: result.sender,
      amount: new import_eth_wallet2.BigNumber(result.amount),
      newBalance: new import_eth_wallet2.BigNumber(result.newBalance),
      _event: event
    };
  }
  parseWithdrawBondEvent(receipt) {
    return this.parseEvents(receipt, "WithdrawBond").map((e) => this.decodeWithdrawBondEvent(e));
  }
  decodeWithdrawBondEvent(event) {
    let result = event.data;
    return {
      sender: result.sender,
      amount: new import_eth_wallet2.BigNumber(result.amount),
      _event: event
    };
  }
  assign() {
    let MAX_COOLDOWN_PERIOD_call = async () => {
      let result = await this.call("MAX_COOLDOWN_PERIOD");
      return new import_eth_wallet2.BigNumber(result);
    };
    this.MAX_COOLDOWN_PERIOD = MAX_COOLDOWN_PERIOD_call;
    let auditorBalance_call = async (param1) => {
      let result = await this.call("auditorBalance", [import_eth_wallet2.Utils.toString(param1)]);
      return new import_eth_wallet2.BigNumber(result);
    };
    this.auditorBalance = auditorBalance_call;
    let auditorIdCount_call = async () => {
      let result = await this.call("auditorIdCount");
      return new import_eth_wallet2.BigNumber(result);
    };
    this.auditorIdCount = auditorIdCount_call;
    let auditorIds_call = async (param1) => {
      let result = await this.call("auditorIds", [param1]);
      return new import_eth_wallet2.BigNumber(result);
    };
    this.auditorIds = auditorIds_call;
    let auditorsData_call = async (param1) => {
      let result = await this.call("auditorsData", [import_eth_wallet2.Utils.toString(param1)]);
      return {
        auditor: result.auditor,
        status: new import_eth_wallet2.BigNumber(result.status)
      };
    };
    this.auditorsData = auditorsData_call;
    let cooldownPeriod_call = async () => {
      let result = await this.call("cooldownPeriod");
      return new import_eth_wallet2.BigNumber(result);
    };
    this.cooldownPeriod = cooldownPeriod_call;
    let getAuditorsParams = (params) => [import_eth_wallet2.Utils.toString(params.auditorIdStart), import_eth_wallet2.Utils.toString(params.length)];
    let getAuditors_call = async (params) => {
      let result = await this.call("getAuditors", getAuditorsParams(params));
      return result.map((e) => ({
        auditor: e.auditor,
        status: new import_eth_wallet2.BigNumber(e.status)
      }));
    };
    this.getAuditors = getAuditors_call;
    let isActiveAuditor_call = async (account) => {
      let result = await this.call("isActiveAuditor", [account]);
      return result;
    };
    this.isActiveAuditor = isActiveAuditor_call;
    let isPermitted_call = async (param1) => {
      let result = await this.call("isPermitted", [param1]);
      return result;
    };
    this.isPermitted = isPermitted_call;
    let newOwner_call = async () => {
      let result = await this.call("newOwner");
      return result;
    };
    this.newOwner = newOwner_call;
    let owner_call = async () => {
      let result = await this.call("owner");
      return result;
    };
    this.owner = owner_call;
    let pendingWithdrawal_call = async (param1) => {
      let result = await this.call("pendingWithdrawal", [import_eth_wallet2.Utils.toString(param1)]);
      return {
        amount: new import_eth_wallet2.BigNumber(result.amount),
        releaseTime: new import_eth_wallet2.BigNumber(result.releaseTime)
      };
    };
    this.pendingWithdrawal = pendingWithdrawal_call;
    let token_call = async () => {
      let result = await this.call("token");
      return result;
    };
    this.token = token_call;
    let addAuditor_send = async (auditor) => {
      let result = await this.send("addAuditor", [auditor]);
      return result;
    };
    let addAuditor_call = async (auditor) => {
      let result = await this.call("addAuditor", [auditor]);
      return;
    };
    this.addAuditor = Object.assign(addAuditor_send, {
      call: addAuditor_call
    });
    let deny_send = async (user) => {
      let result = await this.send("deny", [user]);
      return result;
    };
    let deny_call = async (user) => {
      let result = await this.call("deny", [user]);
      return;
    };
    this.deny = Object.assign(deny_send, {
      call: deny_call
    });
    let disableAuditor_send = async (auditor) => {
      let result = await this.send("disableAuditor", [auditor]);
      return result;
    };
    let disableAuditor_call = async (auditor) => {
      let result = await this.call("disableAuditor", [auditor]);
      return;
    };
    this.disableAuditor = Object.assign(disableAuditor_send, {
      call: disableAuditor_call
    });
    let permit_send = async (user) => {
      let result = await this.send("permit", [user]);
      return result;
    };
    let permit_call = async (user) => {
      let result = await this.call("permit", [user]);
      return;
    };
    this.permit = Object.assign(permit_send, {
      call: permit_call
    });
    let setCooldownPeriod_send = async (cooldownPeriod) => {
      let result = await this.send("setCooldownPeriod", [import_eth_wallet2.Utils.toString(cooldownPeriod)]);
      return result;
    };
    let setCooldownPeriod_call = async (cooldownPeriod) => {
      let result = await this.call("setCooldownPeriod", [import_eth_wallet2.Utils.toString(cooldownPeriod)]);
      return;
    };
    this.setCooldownPeriod = Object.assign(setCooldownPeriod_send, {
      call: setCooldownPeriod_call
    });
    let stakeBond_send = async (amount) => {
      let result = await this.send("stakeBond", [import_eth_wallet2.Utils.toString(amount)]);
      return result;
    };
    let stakeBond_call = async (amount) => {
      let result = await this.call("stakeBond", [import_eth_wallet2.Utils.toString(amount)]);
      return;
    };
    this.stakeBond = Object.assign(stakeBond_send, {
      call: stakeBond_call
    });
    let takeOwnership_send = async () => {
      let result = await this.send("takeOwnership");
      return result;
    };
    let takeOwnership_call = async () => {
      let result = await this.call("takeOwnership");
      return;
    };
    this.takeOwnership = Object.assign(takeOwnership_send, {
      call: takeOwnership_call
    });
    let transferOwnership_send = async (newOwner) => {
      let result = await this.send("transferOwnership", [newOwner]);
      return result;
    };
    let transferOwnership_call = async (newOwner) => {
      let result = await this.call("transferOwnership", [newOwner]);
      return;
    };
    this.transferOwnership = Object.assign(transferOwnership_send, {
      call: transferOwnership_call
    });
    let unstakeBondRequest_send = async (amount) => {
      let result = await this.send("unstakeBondRequest", [import_eth_wallet2.Utils.toString(amount)]);
      return result;
    };
    let unstakeBondRequest_call = async (amount) => {
      let result = await this.call("unstakeBondRequest", [import_eth_wallet2.Utils.toString(amount)]);
      return;
    };
    this.unstakeBondRequest = Object.assign(unstakeBondRequest_send, {
      call: unstakeBondRequest_call
    });
    let withdrawBond_send = async () => {
      let result = await this.send("withdrawBond");
      return result;
    };
    let withdrawBond_call = async () => {
      let result = await this.call("withdrawBond");
      return;
    };
    this.withdrawBond = Object.assign(withdrawBond_send, {
      call: withdrawBond_call
    });
  }
};

// src/contracts/Authorization.ts
var import_eth_wallet3 = __toModule(require("@ijstech/eth-wallet"));

// src/contracts/Authorization.json.ts
var Authorization_json_default = {
  "abi": [
    { "inputs": [], "stateMutability": "nonpayable", "type": "constructor" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Authorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Deauthorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "StartOwnershipTransfer", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "TransferOwnership", "type": "event" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "deny", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "isPermitted", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "newOwner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "takeOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "newOwner_", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" }
  ],
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b031916331790556104e4806100326000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80639c52a7f11161005b5780639c52a7f114610109578063a2f55ae51461011c578063d4ee1d901461012f578063f2fde38b1461014f57600080fd5b80633fd8cc4e1461008257806360536172146100ba5780638da5cb5b146100c4575b600080fd5b6100a5610090366004610471565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100c2610162565b005b6000546100e49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100b1565b6100c2610117366004610471565b610290565b6100c261012a366004610471565b610337565b6001546100e49073ffffffffffffffffffffffffffffffffffffffff1681565b6100c261015d366004610471565b6103da565b60015473ffffffffffffffffffffffffffffffffffffffff16331461020d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f416374696f6e20706572666f726d656420627920756e617574686f72697a656460448201527f20616464726573732e0000000000000000000000000000000000000000000000606482015260840160405180910390fd5b600180546000805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040519081527fcfaaa26691e16e66e73290fc725eee1a6b4e0e693a1640484937aac25ffb55a49060200160405180910390a1565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102b457600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f79ede3839cd7a7d8bd77e97e5c890565fe4f76cdbbeaa364646e28a8695a788491015b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff16331461035b57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f6d81a01b39982517ba331aeb4f387b0f9cc32334b65bb9a343a077973cf7adf5910161032c565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103fe57600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f686a7ab184e6928ddedba810af7b443d6baa40bf32c4787ccd72c5b4b28cae1b9060200161032c565b60006020828403121561048357600080fd5b813573ffffffffffffffffffffffffffffffffffffffff811681146104a757600080fd5b939250505056fea2646970667358221220b6523287b342d9ec3fca18b09875ca00358cfbd586d642b53bb7ac292207227664736f6c634300080d0033"
};

// src/contracts/Authorization.ts
var Authorization = class extends import_eth_wallet3.Contract {
  constructor(wallet, address) {
    super(wallet, address, Authorization_json_default.abi, Authorization_json_default.bytecode);
    this.assign();
  }
  deploy() {
    return this.__deploy();
  }
  parseAuthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Authorize").map((e) => this.decodeAuthorizeEvent(e));
  }
  decodeAuthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseDeauthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Deauthorize").map((e) => this.decodeDeauthorizeEvent(e));
  }
  decodeDeauthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseStartOwnershipTransferEvent(receipt) {
    return this.parseEvents(receipt, "StartOwnershipTransfer").map((e) => this.decodeStartOwnershipTransferEvent(e));
  }
  decodeStartOwnershipTransferEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseTransferOwnershipEvent(receipt) {
    return this.parseEvents(receipt, "TransferOwnership").map((e) => this.decodeTransferOwnershipEvent(e));
  }
  decodeTransferOwnershipEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  assign() {
    let isPermitted_call = async (param1) => {
      let result = await this.call("isPermitted", [param1]);
      return result;
    };
    this.isPermitted = isPermitted_call;
    let newOwner_call = async () => {
      let result = await this.call("newOwner");
      return result;
    };
    this.newOwner = newOwner_call;
    let owner_call = async () => {
      let result = await this.call("owner");
      return result;
    };
    this.owner = owner_call;
    let deny_send = async (user) => {
      let result = await this.send("deny", [user]);
      return result;
    };
    let deny_call = async (user) => {
      let result = await this.call("deny", [user]);
      return;
    };
    this.deny = Object.assign(deny_send, {
      call: deny_call
    });
    let permit_send = async (user) => {
      let result = await this.send("permit", [user]);
      return result;
    };
    let permit_call = async (user) => {
      let result = await this.call("permit", [user]);
      return;
    };
    this.permit = Object.assign(permit_send, {
      call: permit_call
    });
    let takeOwnership_send = async () => {
      let result = await this.send("takeOwnership");
      return result;
    };
    let takeOwnership_call = async () => {
      let result = await this.call("takeOwnership");
      return;
    };
    this.takeOwnership = Object.assign(takeOwnership_send, {
      call: takeOwnership_call
    });
    let transferOwnership_send = async (newOwner) => {
      let result = await this.send("transferOwnership", [newOwner]);
      return result;
    };
    let transferOwnership_call = async (newOwner) => {
      let result = await this.call("transferOwnership", [newOwner]);
      return;
    };
    this.transferOwnership = Object.assign(transferOwnership_send, {
      call: transferOwnership_call
    });
  }
};

// src/contracts/DomainInfo.ts
var import_eth_wallet4 = __toModule(require("@ijstech/eth-wallet"));

// src/contracts/DomainInfo.json.ts
var DomainInfo_json_default = {
  "abi": [
    { "inputs": [{ "internalType": "contract IERC20", "name": "_token", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "string", "name": "domainName", "type": "string" }, { "indexed": true, "internalType": "address", "name": "spender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Approval", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Authorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Deauthorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "string", "name": "domainName", "type": "string" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256" }], "name": "Deposit", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "sender", "type": "address" }, { "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "string", "name": "domainName", "type": "string" }, { "indexed": true, "internalType": "address", "name": "spender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256" }], "name": "Spend", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "StartOwnershipTransfer", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "TransferOwnership", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "string", "name": "domainName", "type": "string" }, { "indexed": false, "internalType": "uint8", "name": "domainType", "type": "uint8" }, { "indexed": false, "internalType": "string", "name": "module", "type": "string" }], "name": "UpdateDomainInfo", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "string", "name": "domainName", "type": "string" }, { "indexed": false, "internalType": "string", "name": "module", "type": "string" }], "name": "UpdateDomainModule", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": false, "internalType": "string", "name": "domainName", "type": "string" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256" }], "name": "Withdraw", "type": "event" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "string", "name": "", "type": "string" }, { "internalType": "address", "name": "", "type": "address" }], "name": "allowances", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "string", "name": "", "type": "string" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "string", "name": "domainName", "type": "string" }, { "internalType": "uint256", "name": "subtractedValue", "type": "uint256" }], "name": "decreaseAllowance", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "deny", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "string", "name": "domainName", "type": "string" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "deposit", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "string", "name": "", "type": "string" }], "name": "domainModule", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "string", "name": "", "type": "string" }], "name": "domainType", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "string", "name": "domainName", "type": "string" }], "name": "getDomainInfo", "outputs": [{ "internalType": "uint8", "name": "moduleType", "type": "uint8" }, { "internalType": "string", "name": "module", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "string", "name": "domainName", "type": "string" }, { "internalType": "uint256", "name": "addedValue", "type": "uint256" }], "name": "increaseAllowance", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "isPermitted", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "newOwner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "string", "name": "domainName", "type": "string" }, { "internalType": "address", "name": "destination", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "spend", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "takeOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "token", "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "newOwner_", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "string", "name": "domainName", "type": "string" }, { "internalType": "uint8", "name": "moduleType", "type": "uint8" }, { "internalType": "string", "name": "module", "type": "string" }], "name": "updateDomainInfo", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "string", "name": "domainName", "type": "string" }, { "internalType": "string", "name": "module", "type": "string" }], "name": "updateDomainModule", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "string", "name": "domainName", "type": "string" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "withdraw", "outputs": [], "stateMutability": "nonpayable", "type": "function" }
  ],
  "bytecode": "60a060405234801561001057600080fd5b50604051620023333803806200233383398101604081905261003191610059565b600080546001600160a01b0319163317905560016003556001600160a01b0316608052610089565b60006020828403121561006b57600080fd5b81516001600160a01b038116811461008257600080fd5b9392505050565b60805161226b620000c8600039600081816103fd0152818161058601528181610d5401528181611564015281816116000152611658015261226b6000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c80638e27d719116100cd578063b9b092c811610081578063e80ef21611610066578063e80ef216146103d2578063f2fde38b146103e5578063fc0c546a146103f857600080fd5b8063b9b092c814610376578063d4ee1d90146103b257600080fd5b80639d204278116100b25780639d204278146102f2578063a2f55ae514610343578063a7b055b31461035657600080fd5b80638e27d719146102cc5780639c52a7f1146102df57600080fd5b806360536172116101245780637709aac7116101095780637709aac7146102615780637ee9cef0146102745780638da5cb5b1461028757600080fd5b806360536172146102095780636de9c6e61461021157600080fd5b806337ac63b71161015557806337ac63b7146101995780633b80430f146101ac5780633fd8cc4e146101d657600080fd5b806330b39a62146101715780633518785014610186575b600080fd5b61018461017f366004611b5a565b61041f565b005b610184610194366004611ba6565b61060c565b6101846101a7366004611c5a565b6106f6565b6101bf6101ba366004611cb4565b61077c565b6040516101cd929190611d7d565b60405180910390f35b6101f96101e4366004611d99565b60026020526000908152604090205460ff1681565b60405190151581526020016101cd565b6101846108a2565b61025361021f366004611e8e565b6007602090815260009384526040808520845180860184018051928152908401958401959095209452929052825290205481565b6040519081526020016101cd565b61018461026f366004611eec565b6109cc565b610184610282366004611f58565b610a65565b6000546102a79073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101cd565b6101846102da366004611b5a565b610e0b565b6101846102ed366004611d99565b610f99565b610331610300366004611fc5565b6005602090815260009283526040909220815180830184018051928152908401929093019190912091525460ff1681565b60405160ff90911681526020016101cd565b610184610351366004611d99565b611040565b610369610364366004611fc5565b6110e3565b6040516101cd9190612013565b610253610384366004611fc5565b6006602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6001546102a79073ffffffffffffffffffffffffffffffffffffffff1681565b6101846103e0366004611c5a565b611199565b6101846103f3366004611d99565b611213565b6102a77f000000000000000000000000000000000000000000000000000000000000000081565b600260035403610490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600355806104fc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f616d6f756e74203d2030000000000000000000000000000000000000000000006044820152606401610487565b33600090815260066020526040808220905183919061051e9087908790612026565b9081526020016040518091039020546105379190612065565b33600090815260066020526040908190209051919250829161055c9087908790612026565b908152604051908190036020019020556105ad73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633846112aa565b3373ffffffffffffffffffffffffffffffffffffffff167fcab96aa5dae2c7c5f897bf248f4f8531bb6fe7d29c7fac163391926e0bef8313858585856040516105f994939291906120c5565b60405180910390a2505060016003555050565b33600090815260046020526040908190209051839183916106309089908990612026565b90815260405190819003602001902061064a929091611a5a565b503360009081526005602052604090819020905184919061066e9088908890612026565b908152604051908190036020018120805460ff939093167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009093169290921790915533907f1dd5cf9af64bf7411cd2222bc84149ef8841a58465c912adc512580b717b0335906106e790889088908890889088906120ec565b60405180910390a25050505050565b6000805473ffffffffffffffffffffffffffffffffffffffff16815260076020526040808220905161072b9086908690612026565b908152604080516020928190038301902073ffffffffffffffffffffffffffffffffffffffff8816600090815292529020549050610775338585886107708787612065565b611383565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600560205260408082209051606091906107b59086908690612026565b9081526040805191829003602090810183205473ffffffffffffffffffffffffffffffffffffffff89166000908152600490925291902060ff9091169350906108019086908690612026565b9081526020016040518091039020805461081a90612128565b80601f016020809104026020016040519081016040528092919081815260200182805461084690612128565b80156108935780601f1061086857610100808354040283529160200191610893565b820191906000526020600020905b81548152906001019060200180831161087657829003601f168201915b50505050509050935093915050565b60015473ffffffffffffffffffffffffffffffffffffffff163314610949576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f416374696f6e20706572666f726d656420627920756e617574686f72697a656460448201527f20616464726573732e00000000000000000000000000000000000000000000006064820152608401610487565b600180546000805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040519081527fcfaaa26691e16e66e73290fc725eee1a6b4e0e693a1640484937aac25ffb55a49060200160405180910390a1565b33600090815260046020526040908190209051839183916109f09088908890612026565b908152604051908190036020019020610a0a929091611a5a565b503373ffffffffffffffffffffffffffffffffffffffff167f8fdcf277ae4a11f2263407e04c5a0ca73a95a5143412f6701a3803ec74e8e68e85858585604051610a57949392919061217b565b60405180910390a250505050565b600260035403610ad1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610487565b600260035580610b3d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f616d6f756e74203d2030000000000000000000000000000000000000000000006044820152606401610487565b73ffffffffffffffffffffffffffffffffffffffff8216610bba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f7472616e7366657220746f207a65726f206164647265737300000000000000006044820152606401610487565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600760205260408082209051610bef9087908790612026565b908152604080516020928190038301902073ffffffffffffffffffffffffffffffffffffffff861660009081529252902054905081811015610c8d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e73756666696369656e7420616c6c6f77616e6365000000000000000000006044820152606401610487565b73ffffffffffffffffffffffffffffffffffffffff86166000908152600660205260408082209051849190610cc59089908990612026565b908152602001604051809103902054610cde9190612065565b73ffffffffffffffffffffffffffffffffffffffff88166000908152600660205260409081902090519192508291610d199089908990612026565b90815260405190819003602001902055610d3a878787876107708888612065565b610d7b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001685856112aa565b8373ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fd7c0b15ea32a9948b06fee27d39c83085ad847db085fd4fd3e723a0268a3ff4689898887604051610df594939291906120c5565b60405180910390a4505060016003555050505050565b600260035403610e77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610487565b600260035580610ee3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f616d6f756e74203d2030000000000000000000000000000000000000000000006044820152606401610487565b610eec81611533565b3360009081526006602052604080822090519293509091839190610f139087908790612026565b908152602001604051809103902054610f2c91906121a2565b336000908152600660205260409081902090519192508291610f519087908790612026565b9081526040519081900360200181209190915533907fc9c6fab6ecbdd99f0fff2b919fb3ff1ef9ec3e382592cd5323cbb3571da624fc906105f99087908790879087906120c5565b60005473ffffffffffffffffffffffffffffffffffffffff163314610fbd57600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f79ede3839cd7a7d8bd77e97e5c890565fe4f76cdbbeaa364646e28a8695a788491015b60405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff16331461106457600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f6d81a01b39982517ba331aeb4f387b0f9cc32334b65bb9a343a077973cf7adf59101611035565b600460209081526000928352604090922081518083018401805192815290840192909301919091209152805461111890612128565b80601f016020809104026020016040519081016040528092919081815260200182805461114490612128565b80156111915780601f1061116657610100808354040283529160200191611191565b820191906000526020600020905b81548152906001019060200180831161117457829003601f168201915b505050505081565b6000805473ffffffffffffffffffffffffffffffffffffffff1681526007602052604080822090516111ce9086908690612026565b908152604080516020928190038301902073ffffffffffffffffffffffffffffffffffffffff88166000908152925290205490506107753385858861077087876121a2565b60005473ffffffffffffffffffffffffffffffffffffffff16331461123757600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f686a7ab184e6928ddedba810af7b443d6baa40bf32c4787ccd72c5b4b28cae1b90602001611035565b60405173ffffffffffffffffffffffffffffffffffffffff831660248201526044810182905261137e9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526116e8565b505050565b73ffffffffffffffffffffffffffffffffffffffff8516611400576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f617070726f76652066726f6d20746865207a65726f20616464726573730000006044820152606401610487565b73ffffffffffffffffffffffffffffffffffffffff821661147d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f617070726f766520746f20746865207a65726f206164647265737300000000006044820152606401610487565b73ffffffffffffffffffffffffffffffffffffffff85166000908152600760205260409081902090518291906114b69087908790612026565b90815260408051918290036020908101832073ffffffffffffffffffffffffffffffffffffffff808816600081815292909352929020939093558716907fa6c0f34eded777ad8c063a30e4aaa434929cbc9810c83ef9e7e036fd9f1ef92b90611524908890889087906121ba565b60405180910390a35050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156115c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115e491906121de565b905061162873ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163330856117f4565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156116b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d891906121de565b6116e29190612065565b92915050565b600061174a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166118589092919063ffffffff16565b80519091501561137e578080602001905181019061176891906121f7565b61137e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610487565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526118529085907f23b872dd00000000000000000000000000000000000000000000000000000000906084016112fc565b50505050565b60606118678484600085611871565b90505b9392505050565b606082471015611903576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610487565b73ffffffffffffffffffffffffffffffffffffffff85163b611981576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610487565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516119aa9190612219565b60006040518083038185875af1925050503d80600081146119e7576040519150601f19603f3d011682016040523d82523d6000602084013e6119ec565b606091505b50915091506119fc828286611a07565b979650505050505050565b60608315611a1657508161186a565b825115611a265782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104879190612013565b828054611a6690612128565b90600052602060002090601f016020900481019282611a885760008555611aec565b82601f10611abf578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555611aec565b82800160010185558215611aec579182015b82811115611aec578235825591602001919060010190611ad1565b50611af8929150611afc565b5090565b5b80821115611af85760008155600101611afd565b60008083601f840112611b2357600080fd5b50813567ffffffffffffffff811115611b3b57600080fd5b602083019150836020828501011115611b5357600080fd5b9250929050565b600080600060408486031215611b6f57600080fd5b833567ffffffffffffffff811115611b8657600080fd5b611b9286828701611b11565b909790965060209590950135949350505050565b600080600080600060608688031215611bbe57600080fd5b853567ffffffffffffffff80821115611bd657600080fd5b611be289838a01611b11565b90975095506020880135915060ff82168214611bfd57600080fd5b90935060408701359080821115611c1357600080fd5b50611c2088828901611b11565b969995985093965092949392505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611c5557600080fd5b919050565b60008060008060608587031215611c7057600080fd5b611c7985611c31565b9350602085013567ffffffffffffffff811115611c9557600080fd5b611ca187828801611b11565b9598909750949560400135949350505050565b600080600060408486031215611cc957600080fd5b611cd284611c31565b9250602084013567ffffffffffffffff811115611cee57600080fd5b611cfa86828701611b11565b9497909650939450505050565b60005b83811015611d22578181015183820152602001611d0a565b838111156118525750506000910152565b60008151808452611d4b816020860160208601611d07565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60ff831681526040602082015260006118676040830184611d33565b600060208284031215611dab57600080fd5b61186a82611c31565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f830112611df457600080fd5b813567ffffffffffffffff80821115611e0f57611e0f611db4565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611e5557611e55611db4565b81604052838152866020858801011115611e6e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080600060608486031215611ea357600080fd5b611eac84611c31565b9250602084013567ffffffffffffffff811115611ec857600080fd5b611ed486828701611de3565b925050611ee360408501611c31565b90509250925092565b60008060008060408587031215611f0257600080fd5b843567ffffffffffffffff80821115611f1a57600080fd5b611f2688838901611b11565b90965094506020870135915080821115611f3f57600080fd5b50611f4c87828801611b11565b95989497509550505050565b600080600080600060808688031215611f7057600080fd5b611f7986611c31565b9450602086013567ffffffffffffffff811115611f9557600080fd5b611fa188828901611b11565b9095509350611fb4905060408701611c31565b949793965091946060013592915050565b60008060408385031215611fd857600080fd5b611fe183611c31565b9150602083013567ffffffffffffffff811115611ffd57600080fd5b61200985828601611de3565b9150509250929050565b60208152600061186a6020830184611d33565b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561207757612077612036565b500390565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6060815260006120d960608301868861207c565b6020830194909452506040015292915050565b60608152600061210060608301878961207c565b60ff86166020840152828103604084015261211c81858761207c565b98975050505050505050565b600181811c9082168061213c57607f821691505b602082108103612175577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60408152600061218f60408301868861207c565b82810360208401526119fc81858761207c565b600082198211156121b5576121b5612036565b500190565b6040815260006121ce60408301858761207c565b9050826020830152949350505050565b6000602082840312156121f057600080fd5b5051919050565b60006020828403121561220957600080fd5b8151801515811461186a57600080fd5b6000825161222b818460208701611d07565b919091019291505056fea26469706673582212200b9ec7cb664ecfda312312d347fa6e196ffc31b788916aac2455569c537fab8964736f6c634300080d0033"
};

// src/contracts/DomainInfo.ts
var DomainInfo = class extends import_eth_wallet4.Contract {
  constructor(wallet, address) {
    super(wallet, address, DomainInfo_json_default.abi, DomainInfo_json_default.bytecode);
    this.assign();
  }
  deploy(token) {
    return this.__deploy([token]);
  }
  parseApprovalEvent(receipt) {
    return this.parseEvents(receipt, "Approval").map((e) => this.decodeApprovalEvent(e));
  }
  decodeApprovalEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      domainName: result.domainName,
      spender: result.spender,
      value: new import_eth_wallet4.BigNumber(result.value),
      _event: event
    };
  }
  parseAuthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Authorize").map((e) => this.decodeAuthorizeEvent(e));
  }
  decodeAuthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseDeauthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Deauthorize").map((e) => this.decodeDeauthorizeEvent(e));
  }
  decodeDeauthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseDepositEvent(receipt) {
    return this.parseEvents(receipt, "Deposit").map((e) => this.decodeDepositEvent(e));
  }
  decodeDepositEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      domainName: result.domainName,
      amount: new import_eth_wallet4.BigNumber(result.amount),
      newBalance: new import_eth_wallet4.BigNumber(result.newBalance),
      _event: event
    };
  }
  parseSpendEvent(receipt) {
    return this.parseEvents(receipt, "Spend").map((e) => this.decodeSpendEvent(e));
  }
  decodeSpendEvent(event) {
    let result = event.data;
    return {
      sender: result.sender,
      owner: result.owner,
      domainName: result.domainName,
      spender: result.spender,
      amount: new import_eth_wallet4.BigNumber(result.amount),
      newBalance: new import_eth_wallet4.BigNumber(result.newBalance),
      _event: event
    };
  }
  parseStartOwnershipTransferEvent(receipt) {
    return this.parseEvents(receipt, "StartOwnershipTransfer").map((e) => this.decodeStartOwnershipTransferEvent(e));
  }
  decodeStartOwnershipTransferEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseTransferOwnershipEvent(receipt) {
    return this.parseEvents(receipt, "TransferOwnership").map((e) => this.decodeTransferOwnershipEvent(e));
  }
  decodeTransferOwnershipEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseUpdateDomainInfoEvent(receipt) {
    return this.parseEvents(receipt, "UpdateDomainInfo").map((e) => this.decodeUpdateDomainInfoEvent(e));
  }
  decodeUpdateDomainInfoEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      domainName: result.domainName,
      domainType: new import_eth_wallet4.BigNumber(result.domainType),
      module: result.module,
      _event: event
    };
  }
  parseUpdateDomainModuleEvent(receipt) {
    return this.parseEvents(receipt, "UpdateDomainModule").map((e) => this.decodeUpdateDomainModuleEvent(e));
  }
  decodeUpdateDomainModuleEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      domainName: result.domainName,
      module: result.module,
      _event: event
    };
  }
  parseWithdrawEvent(receipt) {
    return this.parseEvents(receipt, "Withdraw").map((e) => this.decodeWithdrawEvent(e));
  }
  decodeWithdrawEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      domainName: result.domainName,
      amount: new import_eth_wallet4.BigNumber(result.amount),
      newBalance: new import_eth_wallet4.BigNumber(result.newBalance),
      _event: event
    };
  }
  assign() {
    let allowancesParams = (params) => [params.param1, params.param2, params.param3];
    let allowances_call = async (params) => {
      let result = await this.call("allowances", allowancesParams(params));
      return new import_eth_wallet4.BigNumber(result);
    };
    this.allowances = allowances_call;
    let balanceOfParams = (params) => [params.param1, params.param2];
    let balanceOf_call = async (params) => {
      let result = await this.call("balanceOf", balanceOfParams(params));
      return new import_eth_wallet4.BigNumber(result);
    };
    this.balanceOf = balanceOf_call;
    let domainModuleParams = (params) => [params.param1, params.param2];
    let domainModule_call = async (params) => {
      let result = await this.call("domainModule", domainModuleParams(params));
      return result;
    };
    this.domainModule = domainModule_call;
    let domainTypeParams = (params) => [params.param1, params.param2];
    let domainType_call = async (params) => {
      let result = await this.call("domainType", domainTypeParams(params));
      return new import_eth_wallet4.BigNumber(result);
    };
    this.domainType = domainType_call;
    let getDomainInfoParams = (params) => [params.owner, params.domainName];
    let getDomainInfo_call = async (params) => {
      let result = await this.call("getDomainInfo", getDomainInfoParams(params));
      return {
        moduleType: new import_eth_wallet4.BigNumber(result.moduleType),
        module: result.module
      };
    };
    this.getDomainInfo = getDomainInfo_call;
    let isPermitted_call = async (param1) => {
      let result = await this.call("isPermitted", [param1]);
      return result;
    };
    this.isPermitted = isPermitted_call;
    let newOwner_call = async () => {
      let result = await this.call("newOwner");
      return result;
    };
    this.newOwner = newOwner_call;
    let owner_call = async () => {
      let result = await this.call("owner");
      return result;
    };
    this.owner = owner_call;
    let token_call = async () => {
      let result = await this.call("token");
      return result;
    };
    this.token = token_call;
    let decreaseAllowanceParams = (params) => [params.spender, params.domainName, import_eth_wallet4.Utils.toString(params.subtractedValue)];
    let decreaseAllowance_send = async (params) => {
      let result = await this.send("decreaseAllowance", decreaseAllowanceParams(params));
      return result;
    };
    let decreaseAllowance_call = async (params) => {
      let result = await this.call("decreaseAllowance", decreaseAllowanceParams(params));
      return;
    };
    this.decreaseAllowance = Object.assign(decreaseAllowance_send, {
      call: decreaseAllowance_call
    });
    let deny_send = async (user) => {
      let result = await this.send("deny", [user]);
      return result;
    };
    let deny_call = async (user) => {
      let result = await this.call("deny", [user]);
      return;
    };
    this.deny = Object.assign(deny_send, {
      call: deny_call
    });
    let depositParams = (params) => [params.domainName, import_eth_wallet4.Utils.toString(params.amount)];
    let deposit_send = async (params) => {
      let result = await this.send("deposit", depositParams(params));
      return result;
    };
    let deposit_call = async (params) => {
      let result = await this.call("deposit", depositParams(params));
      return;
    };
    this.deposit = Object.assign(deposit_send, {
      call: deposit_call
    });
    let increaseAllowanceParams = (params) => [params.spender, params.domainName, import_eth_wallet4.Utils.toString(params.addedValue)];
    let increaseAllowance_send = async (params) => {
      let result = await this.send("increaseAllowance", increaseAllowanceParams(params));
      return result;
    };
    let increaseAllowance_call = async (params) => {
      let result = await this.call("increaseAllowance", increaseAllowanceParams(params));
      return;
    };
    this.increaseAllowance = Object.assign(increaseAllowance_send, {
      call: increaseAllowance_call
    });
    let permit_send = async (user) => {
      let result = await this.send("permit", [user]);
      return result;
    };
    let permit_call = async (user) => {
      let result = await this.call("permit", [user]);
      return;
    };
    this.permit = Object.assign(permit_send, {
      call: permit_call
    });
    let spendParams = (params) => [params.owner, params.domainName, params.destination, import_eth_wallet4.Utils.toString(params.amount)];
    let spend_send = async (params) => {
      let result = await this.send("spend", spendParams(params));
      return result;
    };
    let spend_call = async (params) => {
      let result = await this.call("spend", spendParams(params));
      return;
    };
    this.spend = Object.assign(spend_send, {
      call: spend_call
    });
    let takeOwnership_send = async () => {
      let result = await this.send("takeOwnership");
      return result;
    };
    let takeOwnership_call = async () => {
      let result = await this.call("takeOwnership");
      return;
    };
    this.takeOwnership = Object.assign(takeOwnership_send, {
      call: takeOwnership_call
    });
    let transferOwnership_send = async (newOwner) => {
      let result = await this.send("transferOwnership", [newOwner]);
      return result;
    };
    let transferOwnership_call = async (newOwner) => {
      let result = await this.call("transferOwnership", [newOwner]);
      return;
    };
    this.transferOwnership = Object.assign(transferOwnership_send, {
      call: transferOwnership_call
    });
    let updateDomainInfoParams = (params) => [params.domainName, import_eth_wallet4.Utils.toString(params.moduleType), params.module];
    let updateDomainInfo_send = async (params) => {
      let result = await this.send("updateDomainInfo", updateDomainInfoParams(params));
      return result;
    };
    let updateDomainInfo_call = async (params) => {
      let result = await this.call("updateDomainInfo", updateDomainInfoParams(params));
      return;
    };
    this.updateDomainInfo = Object.assign(updateDomainInfo_send, {
      call: updateDomainInfo_call
    });
    let updateDomainModuleParams = (params) => [params.domainName, params.module];
    let updateDomainModule_send = async (params) => {
      let result = await this.send("updateDomainModule", updateDomainModuleParams(params));
      return result;
    };
    let updateDomainModule_call = async (params) => {
      let result = await this.call("updateDomainModule", updateDomainModuleParams(params));
      return;
    };
    this.updateDomainModule = Object.assign(updateDomainModule_send, {
      call: updateDomainModule_call
    });
    let withdrawParams = (params) => [params.domainName, import_eth_wallet4.Utils.toString(params.amount)];
    let withdraw_send = async (params) => {
      let result = await this.send("withdraw", withdrawParams(params));
      return result;
    };
    let withdraw_call = async (params) => {
      let result = await this.call("withdraw", withdrawParams(params));
      return;
    };
    this.withdraw = Object.assign(withdraw_send, {
      call: withdraw_call
    });
  }
};

// src/contracts/ModuleInfo.ts
var import_eth_wallet5 = __toModule(require("@ijstech/eth-wallet"));

// src/contracts/ModuleInfo.json.ts
var ModuleInfo_json_default = {
  "abi": [
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }, { "indexed": true, "internalType": "string", "name": "version", "type": "string" }, { "indexed": true, "internalType": "bytes32", "name": "currVersionHash", "type": "bytes32" }], "name": "CurrentVersion", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "string", "name": "packageName", "type": "string" }, { "indexed": true, "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }], "name": "NewPackage", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }, { "indexed": true, "internalType": "string", "name": "version", "type": "string" }, { "indexed": false, "internalType": "string", "name": "uri", "type": "string" }], "name": "NewRelease", "type": "event" },
    { "inputs": [{ "internalType": "string", "name": "packageName", "type": "string" }], "name": "addPackage", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }, { "internalType": "string", "name": "version", "type": "string" }, { "internalType": "string", "name": "uri", "type": "string" }, { "internalType": "bool", "name": "pulishRelease", "type": "bool" }], "name": "addRelease", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "getAllOwnerPackages", "outputs": [{ "internalType": "string[]", "name": "packageNames", "type": "string[]" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "getAllOwnerPackagesAndHash", "outputs": [{ "internalType": "string[]", "name": "packageNames", "type": "string[]" }, { "internalType": "bytes32[]", "name": "packageHashes", "type": "bytes32[]" }, { "components": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "string", "name": "currVersion", "type": "string" }, { "internalType": "bytes32", "name": "currVersionHash", "type": "bytes32" }], "internalType": "struct ModuleInfo.Package[]", "name": "packages", "type": "tuple[]" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }], "name": "getAllpackageReleases", "outputs": [{ "components": [{ "internalType": "string", "name": "version", "type": "string" }, { "internalType": "string", "name": "uri", "type": "string" }], "internalType": "struct ModuleInfo.Release[]", "name": "releases", "type": "tuple[]" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "uint256", "name": "from", "type": "uint256" }, { "internalType": "uint256", "name": "length", "type": "uint256" }], "name": "getBatchOwnerPackages", "outputs": [{ "internalType": "string[]", "name": "packageNames", "type": "string[]" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "uint256", "name": "from", "type": "uint256" }, { "internalType": "uint256", "name": "length", "type": "uint256" }], "name": "getBatchOwnerPackagesAndHash", "outputs": [{ "internalType": "string[]", "name": "packageNames", "type": "string[]" }, { "internalType": "bytes32[]", "name": "packageHashes", "type": "bytes32[]" }, { "components": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "string", "name": "currVersion", "type": "string" }, { "internalType": "bytes32", "name": "currVersionHash", "type": "bytes32" }], "internalType": "struct ModuleInfo.Package[]", "name": "packages", "type": "tuple[]" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }, { "internalType": "uint256", "name": "from", "type": "uint256" }, { "internalType": "uint256", "name": "length", "type": "uint256" }], "name": "getBatchpackageReleases", "outputs": [{ "components": [{ "internalType": "string", "name": "version", "type": "string" }, { "internalType": "string", "name": "uri", "type": "string" }], "internalType": "struct ModuleInfo.Release[]", "name": "releases", "type": "tuple[]" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "ownerPackages", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "string", "name": "", "type": "string" }], "name": "ownerPackagesIndex", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "ownerPackagesLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }], "name": "packageProperties", "outputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "string", "name": "currVersion", "type": "string" }, { "internalType": "bytes32", "name": "currVersionHash", "type": "bytes32" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "packageReleases", "outputs": [{ "internalType": "string", "name": "version", "type": "string" }, { "internalType": "string", "name": "uri", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }, { "internalType": "string", "name": "", "type": "string" }], "name": "packageReleasesIndex", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }], "name": "packageReleasesLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "bytes32", "name": "packageHash", "type": "bytes32" }, { "internalType": "string", "name": "version", "type": "string" }], "name": "setCurrentVersion", "outputs": [], "stateMutability": "nonpayable", "type": "function" }
  ],
  "bytecode": "608060405234801561001057600080fd5b50612688806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636b13706411610097578063b8b921e611610066578063b8b921e614610274578063bcb6a21a146102b0578063c7ecf2be146102d0578063e834198e1461030c57600080fd5b80636b1370641461020d5780638953480314610220578063ae0efa5914610240578063b40eb9a81461025357600080fd5b806342b4fb70116100d357806342b4fb701461019857806347cebd3e146101ab578063537eb5e2146101cd57806357eae14c146101ed57600080fd5b80630ace8c9a1461010557806323d7cd791461011a57806330bc5ed4146101635780633b3aa3c514610176575b600080fd5b610118610113366004611cbf565b61031f565b005b610150610128366004611d2a565b73ffffffffffffffffffffffffffffffffffffffff1660009081526001602052604090205490565b6040519081526020015b60405180910390f35b610118610171366004611d4c565b610520565b610189610184366004611ddd565b6107ea565b60405161015a93929190611efc565b6101186101a6366004611ffb565b610bf8565b6101be6101b9366004612047565b610d74565b60405161015a93929190612060565b6101e06101db36600461209f565b610e36565b60405161015a91906120cb565b6102006101fb36600461216e565b611076565b60405161015a9190612198565b61018961021b366004611d2a565b61112f565b61023361022e366004611ddd565b6114a9565b60405161015a91906121ab565b61023361024e366004611d2a565b611652565b6102666102613660046121be565b61174e565b60405161015a9291906121e0565b6101506102823660046122e8565b6002602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6101506102be366004612047565b60009081526003602052604090205490565b6101506102de366004612336565b6004602090815260009283526040909220815180830184018051928152908401929093019190912091525481565b6101e061031a366004612047565b61189f565b3360009081526001602052604090208054158061039757503360009081526002602052604090819020905161039791839161035d9087908790612367565b9081526020016040518091039020548154811061037c5761037c612377565b906000526020600020018484611a2a9290919263ffffffff16565b610402576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f7061636b61676520616c7265616479206578697374730000000000000000000060448201526064015b60405180910390fd5b8054336000908152600260205260409081902090516104249086908690612367565b9081526040516020918190038201902091909155815460018101835560008381529190912061045591018484611b4b565b50600033848460405160200161046d939291906123a6565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012060008181529182905291902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633179055915081906104e89086908690612367565b6040519081900381209033907f579649d2aa6da55b0268fdeb659787ece76b47a589d697e308c7ebf945f9c94f90600090a450505050565b60008681526020819052604090205473ffffffffffffffffffffffffffffffffffffffff1633146105ad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f742066726f6d207061636b616765206f776e65720000000000000000000060448201526064016103f9565b600086815260036020526040902080541580610623575061062381600460008a815260200190815260200160002088886040516105eb929190612367565b9081526020016040518091039020548154811061060a5761060a612377565b6000918252602090912088918891600290910201611a2a565b610689576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f76657273696f6e20616c7265616479206578697374730000000000000000000060448201526064016103f9565b80546000888152600460205260409081902090516106aa9089908990612367565b908152604080519182900360209081018320939093556060601f8901849004909302820183018152810187815283928291908a908a9081908501838280828437600092019190915250505090825250604080516020601f8901819004810282018101909252878152918101919088908890819084018382808284376000920182905250939094525050835460018101855593815260209081902083518051949560020290910193610762935084929190910190611bed565b50602082810151805161077b9260018501920190611bed565b505050858560405161078e929190612367565b6040518091039020877fb9746d38e4663162c7b0943efcc013d2012228d3e30313994da19f6a5a141ee486866040516107c89291906123e5565b60405180910390a381156107e1576107e1878787611a86565b50505050505050565b73ffffffffffffffffffffffffffffffffffffffff831660009081526001602052604090205460609081908190806108228688612461565b1115610835576108328682612479565b94505b8467ffffffffffffffff81111561084e5761084e61220e565b60405190808252806020026020018201604052801561088157816020015b606081526020019060019003908161086c5790505b5093508467ffffffffffffffff81111561089d5761089d61220e565b6040519080825280602002602001820160405280156108c6578160200160208202803683370190505b5092508467ffffffffffffffff8111156108e2576108e261220e565b60405190808252806020026020018201604052801561093257816020015b604080516060808201835260008083526020830191909152918101919091528152602001906001900390816109005790505b50915060005b85811015610bed5773ffffffffffffffffffffffffffffffffffffffff8816600090815260016020526040902080548890811061097757610977612377565b90600052602060002001805461098c90612490565b80601f01602080910402602001604051908101604052809291908181526020018280546109b890612490565b8015610a055780601f106109da57610100808354040283529160200191610a05565b820191906000526020600020905b8154815290600101906020018083116109e857829003601f168201915b5050505050858281518110610a1c57610a1c612377565b602002602001018190525087858281518110610a3a57610a3a612377565b6020026020010151604051602001610a539291906124e3565b60405160208183030381529060405280519060200120848281518110610a7b57610a7b612377565b602002602001018181525050600080858381518110610a9c57610a9c612377565b602002602001015181526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182018054610b2390612490565b80601f0160208091040260200160405190810160405280929190818152602001828054610b4f90612490565b8015610b9c5780601f10610b7157610100808354040283529160200191610b9c565b820191906000526020600020905b815481529060010190602001808311610b7f57829003601f168201915b50505050508152602001600282015481525050838281518110610bc157610bc1612377565b60200260200101819052508680610bd79061252e565b9750508080610be59061252e565b915050610938565b505093509350939050565b60008381526020819052604090205473ffffffffffffffffffffffffffffffffffffffff163314610c85576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f742066726f6d207061636b616765206f776e65720000000000000000000060448201526064016103f9565b6000838152600360205260409020805415801590610cfd5750610cfd81600460008781526020019081526020016000208585604051610cc5929190612367565b90815260200160405180910390205481548110610ce457610ce4612377565b6000918252602090912085918591600290910201611a2a565b610d63576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f76657273696f6e206e6f7420657869737473000000000000000000000000000060448201526064016103f9565b610d6e848484611a86565b50505050565b6000602081905290815260409020805460018201805473ffffffffffffffffffffffffffffffffffffffff9092169291610dad90612490565b80601f0160208091040260200160405190810160405280929190818152602001828054610dd990612490565b8015610e265780601f10610dfb57610100808354040283529160200191610e26565b820191906000526020600020905b815481529060010190602001808311610e0957829003601f168201915b5050505050908060020154905083565b60008381526003602052604090205460609080610e538486612461565b1115610e6657610e638482612479565b92505b8267ffffffffffffffff811115610e7f57610e7f61220e565b604051908082528060200260200182016040528015610ec457816020015b6040805180820190915260608082526020820152815260200190600190039081610e9d5790505b50915060005b8381101561106d576000868152600360205260409020805486908110610ef257610ef2612377565b9060005260206000209060020201604051806040016040529081600082018054610f1b90612490565b80601f0160208091040260200160405190810160405280929190818152602001828054610f4790612490565b8015610f945780601f10610f6957610100808354040283529160200191610f94565b820191906000526020600020905b815481529060010190602001808311610f7757829003601f168201915b50505050508152602001600182018054610fad90612490565b80601f0160208091040260200160405190810160405280929190818152602001828054610fd990612490565b80156110265780601f10610ffb57610100808354040283529160200191611026565b820191906000526020600020905b81548152906001019060200180831161100957829003601f168201915b50505050508152505083828151811061104157611041612377565b602002602001018190525084806110579061252e565b95505080806110659061252e565b915050610eca565b50509392505050565b6001602052816000526040600020818154811061109257600080fd5b906000526020600020016000915091505080546110ae90612490565b80601f01602080910402602001604051908101604052809291908181526020018280546110da90612490565b80156111275780601f106110fc57610100808354040283529160200191611127565b820191906000526020600020905b81548152906001019060200180831161110a57829003601f168201915b505050505081565b73ffffffffffffffffffffffffffffffffffffffff811660009081526001602090815260408083208054825181850281018501909352808352606094859485949392919084015b8282101561122257838290600052602060002001805461119590612490565b80601f01602080910402602001604051908101604052809291908181526020018280546111c190612490565b801561120e5780601f106111e35761010080835404028352916020019161120e565b820191906000526020600020905b8154815290600101906020018083116111f157829003601f168201915b505050505081526020019060010190611176565b505082519295508291505067ffffffffffffffff8111156112455761124561220e565b60405190808252806020026020018201604052801561126e578160200160208202803683370190505b5092508067ffffffffffffffff81111561128a5761128a61220e565b6040519080825280602002602001820160405280156112da57816020015b604080516060808201835260008083526020830191909152918101919091528152602001906001900390816112a85790505b50915060005b818110156114a057858582815181106112fb576112fb612377565b60200260200101516040516020016113149291906124e3565b6040516020818303038152906040528051906020012084828151811061133c5761133c612377565b60200260200101818152505060008085838151811061135d5761135d612377565b602002602001015181526020019081526020016000206040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180546113e490612490565b80601f016020809104026020016040519081016040528092919081815260200182805461141090612490565b801561145d5780601f106114325761010080835404028352916020019161145d565b820191906000526020600020905b81548152906001019060200180831161144057829003601f168201915b5050505050815260200160028201548152505083828151811061148257611482612377565b602002602001018190525080806114989061252e565b9150506112e0565b50509193909250565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260016020526040902054606090806114dd8486612461565b11156114f0576114ed8482612479565b92505b8267ffffffffffffffff8111156115095761150961220e565b60405190808252806020026020018201604052801561153c57816020015b60608152602001906001900390816115275790505b50915060005b8381101561106d5773ffffffffffffffffffffffffffffffffffffffff8616600090815260016020526040902080548690811061158157611581612377565b90600052602060002001805461159690612490565b80601f01602080910402602001604051908101604052809291908181526020018280546115c290612490565b801561160f5780601f106115e45761010080835404028352916020019161160f565b820191906000526020600020905b8154815290600101906020018083116115f257829003601f168201915b505050505083828151811061162657611626612377565b6020026020010181905250848061163c9061252e565b955050808061164a9061252e565b915050611542565b73ffffffffffffffffffffffffffffffffffffffff81166000908152600160209081526040808320805482518185028101850190935280835260609492939192909184015b828210156117435783829060005260206000200180546116b690612490565b80601f01602080910402602001604051908101604052809291908181526020018280546116e290612490565b801561172f5780601f106117045761010080835404028352916020019161172f565b820191906000526020600020905b81548152906001019060200180831161171257829003601f168201915b505050505081526020019060010190611697565b505050509050919050565b6003602052816000526040600020818154811061176a57600080fd5b90600052602060002090600202016000915091505080600001805461178e90612490565b80601f01602080910402602001604051908101604052809291908181526020018280546117ba90612490565b80156118075780601f106117dc57610100808354040283529160200191611807565b820191906000526020600020905b8154815290600101906020018083116117ea57829003601f168201915b50505050509080600101805461181c90612490565b80601f016020809104026020016040519081016040528092919081815260200182805461184890612490565b80156118955780601f1061186a57610100808354040283529160200191611895565b820191906000526020600020905b81548152906001019060200180831161187857829003601f168201915b5050505050905082565b606060036000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611743578382906000526020600020906002020160405180604001604052908160008201805461190790612490565b80601f016020809104026020016040519081016040528092919081815260200182805461193390612490565b80156119805780601f1061195557610100808354040283529160200191611980565b820191906000526020600020905b81548152906001019060200180831161196357829003601f168201915b5050505050815260200160018201805461199990612490565b80601f01602080910402602001604051908101604052809291908181526020018280546119c590612490565b8015611a125780601f106119e757610100808354040283529160200191611a12565b820191906000526020600020905b8154815290600101906020018083116119f557829003601f168201915b505050505081525050815260200190600101906118d4565b600081604051602001611a3d9190612566565b604051602081830303815290604052805190602001208484604051602001611a66929190612367565b604051602081830303815290604052805190602001201490509392505050565b6000838152602081905260409020611aa2906001018383611b4b565b506000838383604051602001611aba93929190612638565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828252805160209182012060008881529182905291902060020181905591508190611b139085908590612367565b6040519081900381209086907f571fbb5167d8bdf75368372c7ff4760e0f3f94fd3ddc5b7dda1735fc5eca793e90600090a450505050565b828054611b5790612490565b90600052602060002090601f016020900481019282611b795760008555611bdd565b82601f10611bb0578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555611bdd565b82800160010185558215611bdd579182015b82811115611bdd578235825591602001919060010190611bc2565b50611be9929150611c61565b5090565b828054611bf990612490565b90600052602060002090601f016020900481019282611c1b5760008555611bdd565b82601f10611c3457805160ff1916838001178555611bdd565b82800160010185558215611bdd579182015b82811115611bdd578251825591602001919060010190611c46565b5b80821115611be95760008155600101611c62565b60008083601f840112611c8857600080fd5b50813567ffffffffffffffff811115611ca057600080fd5b602083019150836020828501011115611cb857600080fd5b9250929050565b60008060208385031215611cd257600080fd5b823567ffffffffffffffff811115611ce957600080fd5b611cf585828601611c76565b90969095509350505050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611d2557600080fd5b919050565b600060208284031215611d3c57600080fd5b611d4582611d01565b9392505050565b60008060008060008060808789031215611d6557600080fd5b86359550602087013567ffffffffffffffff80821115611d8457600080fd5b611d908a838b01611c76565b90975095506040890135915080821115611da957600080fd5b50611db689828a01611c76565b90945092505060608701358015158114611dcf57600080fd5b809150509295509295509295565b600080600060608486031215611df257600080fd5b611dfb84611d01565b95602085013595506040909401359392505050565b60005b83811015611e2b578181015183820152602001611e13565b83811115610d6e5750506000910152565b60008151808452611e54816020860160208601611e10565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b84811015611eef577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018952611edd838351611e3c565b98840198925090830190600101611ea3565b5090979650505050505050565b60006060808352611f0f81840187611e86565b83810360208581019190915286518083528782019282019060005b81811015611f4657845183529383019391830191600101611f2a565b505060409250858103838701528087518083528383019150838160051b840101848a0160005b83811015611fe9577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0868403018552815173ffffffffffffffffffffffffffffffffffffffff8151168452878101518a89860152611fcc8b860182611e3c565b918a0151948a019490945294870194925090860190600101611f6c565b50909c9b505050505050505050505050565b60008060006040848603121561201057600080fd5b83359250602084013567ffffffffffffffff81111561202e57600080fd5b61203a86828701611c76565b9497909650939450505050565b60006020828403121561205957600080fd5b5035919050565b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061208f6060830185611e3c565b9050826040830152949350505050565b6000806000606084860312156120b457600080fd5b505081359360208301359350604090920135919050565b60006020808301818452808551808352604092508286019150828160051b87010184880160005b83811015612160577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08984030185528151805187855261213488860182611e3c565b91890151858303868b015291905061214c8183611e3c565b9689019694505050908601906001016120f2565b509098975050505050505050565b6000806040838503121561218157600080fd5b61218a83611d01565b946020939093013593505050565b602081526000611d456020830184611e3c565b602081526000611d456020830184611e86565b600080604083850312156121d157600080fd5b50508035926020909101359150565b6040815260006121f36040830185611e3c565b82810360208401526122058185611e3c565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261224e57600080fd5b813567ffffffffffffffff808211156122695761226961220e565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019082821181831017156122af576122af61220e565b816040528381528660208588010111156122c857600080fd5b836020870160208301376000602085830101528094505050505092915050565b600080604083850312156122fb57600080fd5b61230483611d01565b9150602083013567ffffffffffffffff81111561232057600080fd5b61232c8582860161223d565b9150509250929050565b6000806040838503121561234957600080fd5b82359150602083013567ffffffffffffffff81111561232057600080fd5b8183823760009101908152919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008460601b168152818360148301376000910160140190815292915050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561247457612474612432565b500190565b60008282101561248b5761248b612432565b500390565b600181811c908216806124a457607f821691505b6020821081036124dd577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000008360601b16815260008251612520816014850160208701611e10565b919091016014019392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361255f5761255f612432565b5060010190565b600080835481600182811c91508083168061258257607f831692505b602080841082036125ba577f4e487b710000000000000000000000000000000000000000000000000000000086526022600452602486fd5b8180156125ce57600181146125fd5761262a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0086168952848901965061262a565b60008a81526020902060005b868110156126225781548b820152908501908301612609565b505084890196505b509498975050505050505050565b83815281836020830137600091016020019081529291505056fea264697066735822122031d0aef7642ea469eae6c6a7a10a95fe9a52019c1313db7d3b579d79fb10859a64736f6c634300080d0033"
};

// src/contracts/ModuleInfo.ts
var ModuleInfo = class extends import_eth_wallet5.Contract {
  constructor(wallet, address) {
    super(wallet, address, ModuleInfo_json_default.abi, ModuleInfo_json_default.bytecode);
    this.assign();
  }
  deploy() {
    return this.__deploy();
  }
  parseCurrentVersionEvent(receipt) {
    return this.parseEvents(receipt, "CurrentVersion").map((e) => this.decodeCurrentVersionEvent(e));
  }
  decodeCurrentVersionEvent(event) {
    let result = event.data;
    return {
      packageHash: result.packageHash,
      version: result.version,
      currVersionHash: result.currVersionHash,
      _event: event
    };
  }
  parseNewPackageEvent(receipt) {
    return this.parseEvents(receipt, "NewPackage").map((e) => this.decodeNewPackageEvent(e));
  }
  decodeNewPackageEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      packageName: result.packageName,
      packageHash: result.packageHash,
      _event: event
    };
  }
  parseNewReleaseEvent(receipt) {
    return this.parseEvents(receipt, "NewRelease").map((e) => this.decodeNewReleaseEvent(e));
  }
  decodeNewReleaseEvent(event) {
    let result = event.data;
    return {
      packageHash: result.packageHash,
      version: result.version,
      uri: result.uri,
      _event: event
    };
  }
  assign() {
    let getAllOwnerPackages_call = async (owner) => {
      let result = await this.call("getAllOwnerPackages", [owner]);
      return result;
    };
    this.getAllOwnerPackages = getAllOwnerPackages_call;
    let getAllOwnerPackagesAndHash_call = async (owner) => {
      let result = await this.call("getAllOwnerPackagesAndHash", [owner]);
      return {
        packageNames: result.packageNames,
        packageHashes: result.packageHashes,
        packages: result.packages.map((e) => ({
          owner: e.owner,
          currVersion: e.currVersion,
          currVersionHash: e.currVersionHash
        }))
      };
    };
    this.getAllOwnerPackagesAndHash = getAllOwnerPackagesAndHash_call;
    let getAllpackageReleases_call = async (packageHash) => {
      let result = await this.call("getAllpackageReleases", [import_eth_wallet5.Utils.stringToBytes32(packageHash)]);
      return result.map((e) => ({
        version: e.version,
        uri: e.uri
      }));
    };
    this.getAllpackageReleases = getAllpackageReleases_call;
    let getBatchOwnerPackagesParams = (params) => [params.owner, import_eth_wallet5.Utils.toString(params.from), import_eth_wallet5.Utils.toString(params.length)];
    let getBatchOwnerPackages_call = async (params) => {
      let result = await this.call("getBatchOwnerPackages", getBatchOwnerPackagesParams(params));
      return result;
    };
    this.getBatchOwnerPackages = getBatchOwnerPackages_call;
    let getBatchOwnerPackagesAndHashParams = (params) => [params.owner, import_eth_wallet5.Utils.toString(params.from), import_eth_wallet5.Utils.toString(params.length)];
    let getBatchOwnerPackagesAndHash_call = async (params) => {
      let result = await this.call("getBatchOwnerPackagesAndHash", getBatchOwnerPackagesAndHashParams(params));
      return {
        packageNames: result.packageNames,
        packageHashes: result.packageHashes,
        packages: result.packages.map((e) => ({
          owner: e.owner,
          currVersion: e.currVersion,
          currVersionHash: e.currVersionHash
        }))
      };
    };
    this.getBatchOwnerPackagesAndHash = getBatchOwnerPackagesAndHash_call;
    let getBatchpackageReleasesParams = (params) => [import_eth_wallet5.Utils.stringToBytes32(params.packageHash), import_eth_wallet5.Utils.toString(params.from), import_eth_wallet5.Utils.toString(params.length)];
    let getBatchpackageReleases_call = async (params) => {
      let result = await this.call("getBatchpackageReleases", getBatchpackageReleasesParams(params));
      return result.map((e) => ({
        version: e.version,
        uri: e.uri
      }));
    };
    this.getBatchpackageReleases = getBatchpackageReleases_call;
    let ownerPackagesParams = (params) => [params.param1, import_eth_wallet5.Utils.toString(params.param2)];
    let ownerPackages_call = async (params) => {
      let result = await this.call("ownerPackages", ownerPackagesParams(params));
      return result;
    };
    this.ownerPackages = ownerPackages_call;
    let ownerPackagesIndexParams = (params) => [params.param1, params.param2];
    let ownerPackagesIndex_call = async (params) => {
      let result = await this.call("ownerPackagesIndex", ownerPackagesIndexParams(params));
      return new import_eth_wallet5.BigNumber(result);
    };
    this.ownerPackagesIndex = ownerPackagesIndex_call;
    let ownerPackagesLength_call = async (owner) => {
      let result = await this.call("ownerPackagesLength", [owner]);
      return new import_eth_wallet5.BigNumber(result);
    };
    this.ownerPackagesLength = ownerPackagesLength_call;
    let packageProperties_call = async (param1) => {
      let result = await this.call("packageProperties", [import_eth_wallet5.Utils.stringToBytes32(param1)]);
      return {
        owner: result.owner,
        currVersion: result.currVersion,
        currVersionHash: result.currVersionHash
      };
    };
    this.packageProperties = packageProperties_call;
    let packageReleasesParams = (params) => [import_eth_wallet5.Utils.stringToBytes32(params.param1), import_eth_wallet5.Utils.toString(params.param2)];
    let packageReleases_call = async (params) => {
      let result = await this.call("packageReleases", packageReleasesParams(params));
      return {
        version: result.version,
        uri: result.uri
      };
    };
    this.packageReleases = packageReleases_call;
    let packageReleasesIndexParams = (params) => [import_eth_wallet5.Utils.stringToBytes32(params.param1), params.param2];
    let packageReleasesIndex_call = async (params) => {
      let result = await this.call("packageReleasesIndex", packageReleasesIndexParams(params));
      return new import_eth_wallet5.BigNumber(result);
    };
    this.packageReleasesIndex = packageReleasesIndex_call;
    let packageReleasesLength_call = async (packageHash) => {
      let result = await this.call("packageReleasesLength", [import_eth_wallet5.Utils.stringToBytes32(packageHash)]);
      return new import_eth_wallet5.BigNumber(result);
    };
    this.packageReleasesLength = packageReleasesLength_call;
    let addPackage_send = async (packageName) => {
      let result = await this.send("addPackage", [packageName]);
      return result;
    };
    let addPackage_call = async (packageName) => {
      let result = await this.call("addPackage", [packageName]);
      return;
    };
    this.addPackage = Object.assign(addPackage_send, {
      call: addPackage_call
    });
    let addReleaseParams = (params) => [import_eth_wallet5.Utils.stringToBytes32(params.packageHash), params.version, params.uri, params.pulishRelease];
    let addRelease_send = async (params) => {
      let result = await this.send("addRelease", addReleaseParams(params));
      return result;
    };
    let addRelease_call = async (params) => {
      let result = await this.call("addRelease", addReleaseParams(params));
      return;
    };
    this.addRelease = Object.assign(addRelease_send, {
      call: addRelease_call
    });
    let setCurrentVersionParams = (params) => [import_eth_wallet5.Utils.stringToBytes32(params.packageHash), params.version];
    let setCurrentVersion_send = async (params) => {
      let result = await this.send("setCurrentVersion", setCurrentVersionParams(params));
      return result;
    };
    let setCurrentVersion_call = async (params) => {
      let result = await this.call("setCurrentVersion", setCurrentVersionParams(params));
      return;
    };
    this.setCurrentVersion = Object.assign(setCurrentVersion_send, {
      call: setCurrentVersion_call
    });
  }
};

// src/contracts/ProjectInfo.ts
var import_eth_wallet6 = __toModule(require("@ijstech/eth-wallet"));

// src/contracts/ProjectInfo.json.ts
var ProjectInfo_json_default = {
  "abi": [
    { "inputs": [{ "internalType": "contract IERC20", "name": "_token", "type": "address" }, { "internalType": "contract AuditorInfo", "name": "_auditorInfo", "type": "address" }], "stateMutability": "nonpayable", "type": "constructor" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": true, "internalType": "address", "name": "admin", "type": "address" }], "name": "AddAdmin", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Authorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "Deauthorize", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": true, "internalType": "uint256", "name": "packageId", "type": "uint256" }, { "indexed": false, "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "NewPackage", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "packageId", "type": "uint256" }, { "indexed": true, "internalType": "uint256", "name": "packageVersionId", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "version", "type": "uint256" }], "name": "NewPackageVersion", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": true, "internalType": "address", "name": "owner", "type": "address" }], "name": "NewProject", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": true, "internalType": "uint256", "name": "projectVersionIdx", "type": "uint256" }, { "indexed": false, "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "NewProjectVersion", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": true, "internalType": "address", "name": "admin", "type": "address" }], "name": "RemoveAdmin", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "packageId", "type": "uint256" }, { "indexed": true, "internalType": "uint256", "name": "packageVersionId", "type": "uint256" }, { "indexed": false, "internalType": "enum ProjectInfo.PackageVersionStatus", "name": "status", "type": "uint8" }], "name": "SetPackageVersionStatus", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": true, "internalType": "uint256", "name": "projectVersionIdx", "type": "uint256" }], "name": "SetProjectCurrentVersion", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "sender", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256" }], "name": "Stake", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "StartOwnershipTransfer", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": false, "internalType": "address", "name": "user", "type": "address" }], "name": "TransferOwnership", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": true, "internalType": "address", "name": "newOwner", "type": "address" }], "name": "TransferProjectOwnership", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "sender", "type": "address" }, { "indexed": true, "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "amount", "type": "uint256" }, { "indexed": false, "internalType": "uint256", "name": "newBalance", "type": "uint256" }], "name": "Unstake", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "packageId", "type": "uint256" }, { "indexed": false, "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "UpdatePackageIpfsCid", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectVersionIdx", "type": "uint256" }, { "indexed": false, "internalType": "enum ProjectInfo.ProjectStatus", "name": "status", "type": "uint8" }], "name": "Validate", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "uint256", "name": "projectVersionIdx", "type": "uint256" }], "name": "VoidProjectVersion", "type": "event" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "address", "name": "admin", "type": "address" }], "name": "addProjectAdmin", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "auditorInfo", "outputs": [{ "internalType": "contract AuditorInfo", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "deny", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }], "name": "isPermitted", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "latestAuditedPackageVersion", "outputs": [{ "internalType": "uint256", "name": "packageId", "type": "uint256" }, { "internalType": "uint256", "name": "version", "type": "uint256" }, { "internalType": "enum ProjectInfo.PackageVersionStatus", "name": "status", "type": "uint8" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "newOwner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "newPackage", "outputs": [{ "internalType": "uint256", "name": "packageId", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "packageId", "type": "uint256" }], "name": "newPackageVersion", "outputs": [{ "internalType": "uint256", "name": "packageVersionId", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "newProject", "outputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "newProjectVersion", "outputs": [{ "internalType": "uint256", "name": "versionIdx", "type": "uint256" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "owner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "ownersProjects", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "ownersProjectsInv", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }], "name": "ownersProjectsLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "packageVersions", "outputs": [{ "internalType": "uint256", "name": "packageId", "type": "uint256" }, { "internalType": "uint256", "name": "version", "type": "uint256" }, { "internalType": "enum ProjectInfo.PackageVersionStatus", "name": "status", "type": "uint8" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "packageVersionsLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "packageVersionsList", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "packageId", "type": "uint256" }], "name": "packageVersionsListLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "packages", "outputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "currVersionIndex", "type": "uint256" }, { "internalType": "enum ProjectInfo.PackageStatus", "name": "status", "type": "uint8" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "packagesLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "user", "type": "address" }], "name": "permit", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectAdmin", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "address", "name": "", "type": "address" }], "name": "projectAdminInv", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }], "name": "projectAdminLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "", "type": "address" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectBackerBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectBalance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "projectCount", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectCurrentVersion", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectNewOwner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectOwner", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectPackages", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectPackagesInv", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }], "name": "projectPackagesLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }, { "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectVersionList", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }], "name": "projectVersionListLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "name": "projectVersions", "outputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "version", "type": "uint256" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }, { "internalType": "enum ProjectInfo.ProjectStatus", "name": "status", "type": "uint8" }, { "internalType": "uint64", "name": "lastModifiedDate", "type": "uint64" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "string", "name": "", "type": "string" }], "name": "projectVersionsInv", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "projectVersionsLength", "outputs": [{ "internalType": "uint256", "name": "length", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "address", "name": "admin", "type": "address" }], "name": "removeProjectAdmin", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "packageVersionId", "type": "uint256" }], "name": "setPackageVersionToAuditFailed", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "packageVersionId", "type": "uint256" }], "name": "setPackageVersionToAuditPassed", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "packageVersionId", "type": "uint256" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "setPackageVersionToAuditing", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "versionIdx", "type": "uint256" }], "name": "setProjectCurrentVersion", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "stake", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "takeOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }], "name": "takeProjectOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "token", "outputs": [{ "internalType": "contract IERC20", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "newOwner_", "type": "address" }], "name": "transferOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "address", "name": "newOwner", "type": "address" }], "name": "transferProjectOwnership", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "unstake", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "packageId", "type": "uint256" }, { "internalType": "string", "name": "ipfsCid", "type": "string" }], "name": "updatePackageIpfsCid", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectVersionIdx", "type": "uint256" }, { "internalType": "enum ProjectInfo.ProjectStatus", "name": "status", "type": "uint8" }], "name": "validateProject", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "packageVersionId", "type": "uint256" }], "name": "voidPackageVersion", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "uint256", "name": "projectId", "type": "uint256" }, { "internalType": "uint256", "name": "versionIdx", "type": "uint256" }], "name": "voidProjectVersion", "outputs": [], "stateMutability": "nonpayable", "type": "function" }
  ],
  "bytecode": "60a06040523480156200001157600080fd5b50604051620045a7380380620045a7833981016040819052620000349162000088565b600080546001600160a01b0319908116331790915560016003556001600160a01b0392831660805260048054929093169116179055620000c7565b6001600160a01b03811681146200008557600080fd5b50565b600080604083850312156200009c57600080fd5b8251620000a9816200006f565b6020840151909250620000bc816200006f565b809150509250929050565b6080516144a8620000ff600039600081816108cc0152818161227c0152818161362c015281816136c8015261372001526144a86000f3fe608060405234801561001057600080fd5b50600436106103625760003560e01c80639c52a7f1116101c8578063ccbeffc211610104578063e1cac57b116100a2578063fb10856d1161007c578063fb10856d1461087c578063fb349078146108a7578063fc0c546a146108c7578063fc7a86ae146108ee57600080fd5b8063e1cac57b1461084e578063f2fde38b14610861578063f7f438361461087457600080fd5b8063d809dba1116100de578063d809dba1146107ea578063d99f367f146107fd578063dba06ed614610828578063dfecbd8e1461083b57600080fd5b8063ccbeffc214610781578063d0f9ac35146107b7578063d4ee1d90146107ca57600080fd5b8063b6cd864911610171578063c113aeb01161014b578063c113aeb014610718578063c216212a1461072b578063c9d6b13d1461074e578063cb2d95ae1461076157600080fd5b8063b6cd8649146106c5578063b851a311146106e5578063c1079792146106f857600080fd5b8063a3fe6112116101a2578063a3fe61121461067f578063abcfb19014610692578063ac1c4f4c146106a557600080fd5b80639c52a7f1146106465780639e2c8a5b14610659578063a2f55ae51461066c57600080fd5b80634f24c5fa116102a25780637b0472f01161024057806389fe08f81161021a57806389fe08f8146105b25780638da5cb5b146105e85780638ed7457f14610608578063977f39701461061b57600080fd5b80637b0472f0146105545780637d8c0ef11461056757806387bfc51f1461057a57600080fd5b8063605361721161027c57806360536172146104f257806371b439c6146104fa578063723dd3da1461050d57806378194f781461053057600080fd5b80634f24c5fa146104c457806355c8d712146104cc5780635ff06877146104df57600080fd5b806329d1e7491161030f57806336fbad26116102e957806336fbad261461044a5780633fd8cc4e146104535780633ff84cdf146104865780634731b49f146104b157600080fd5b806329d1e749146103ec57806332799c571461040c578063368e98521461043757600080fd5b806310c435211161034057806310c43521146103a65780631251c946146103b957806324115090146103cc57600080fd5b8063068c539114610367578063087d98861461037c5780630f154ded14610393575b600080fd5b61037a610375366004613dc4565b610924565b005b6012545b6040519081526020015b60405180910390f35b6103806103a1366004613df0565b610b48565b6103806103b4366004613df0565b610b79565b61037a6103c7366004613e12565b610ef9565b6103806103da366004613e12565b6000908152600c602052604090205490565b6103806103fa366004613e12565b60009081526016602052604090205490565b61038061041a366004613e2b565b600a60209081526000928352604080842090915290825290205481565b61037a610445366004613dc4565b611022565b61038060055481565b610476610461366004613e55565b60026020526000908152604090205460ff1681565b604051901515815260200161038a565b610380610494366004613e9f565b8051602081830181018051600f8252928201919093012091525481565b61037a6104bf366004613df0565b6112bc565b601354610380565b61037a6104da366004613fb7565b611582565b61037a6104ed366004614003565b6116b4565b61037a61192b565b610380610508366004613df0565b611a55565b61052061051b366004613e12565b611a71565b60405161038a94939291906140f0565b61054361053e366004613e12565b611b3d565b60405161038a959493929190614136565b61037a610562366004613df0565b611c1a565b610380610575366004613e2b565b611dab565b61058d610588366004613df0565b611dc7565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161038a565b61058d6105c0366004613e12565b60086020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60005461058d9073ffffffffffffffffffffffffffffffffffffffff1681565b61037a610616366004613df0565b611e0c565b610380610629366004613dc4565b600d60209081526000928352604080842090915290825290205481565b61037a610654366004613e55565b61207e565b61037a610667366004613df0565b612125565b61037a61067a366004613e55565b6122dd565b61038061068d366004613fb7565b612380565b61037a6106a036600461417e565b612629565b60045461058d9073ffffffffffffffffffffffffffffffffffffffff1681565b6103806106d3366004613e12565b60106020526000908152604090205481565b61037a6106f3366004613e12565b61287d565b610380610706366004613e12565b60009081526014602052604090205490565b61037a610726366004613e12565b612b2a565b61073e610739366004613e12565b612cef565b60405161038a94939291906141d1565b61038061075c366004613df0565b612cff565b61038061076f366004613e12565b60009081526011602052604090205490565b61038061078f366004613e55565b73ffffffffffffffffffffffffffffffffffffffff1660009081526009602052604090205490565b6105206107c5366004613e12565b612d1b565b60015461058d9073ffffffffffffffffffffffffffffffffffffffff1681565b6103806107f8366004613fb7565b612d4f565b61038061080b366004613e2b565b600760209081526000928352604080842090915290825290205481565b61037a610836366004613e12565b612fb5565b61037a610849366004613dc4565b6131ce565b61038061085c366004614206565b6132b1565b61037a61086f366004613e55565b613384565b600e54610380565b61038061088a366004613df0565b601760209081526000928352604080842090915290825290205481565b6103806108b5366004613e12565b60066020526000908152604090205481565b61058d7f000000000000000000000000000000000000000000000000000000000000000081565b61058d6108fc366004613e12565b600b6020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b600082815260086020526040902054829073ffffffffffffffffffffffffffffffffffffffff1633146109b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d206f776e657200000000000000000000000000000000000060448201526064015b60405180910390fd5b6000838152600c60205260409020541580610a3d57506000838152600c60209081526040808320600d835281842073ffffffffffffffffffffffffffffffffffffffff8716808652935292205482549192918110610a1857610a18614248565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff1614155b610aa3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f616c726561647920612061646d696e000000000000000000000000000000000060448201526064016109af565b6000838152600c602081815260408084208054600d845282862073ffffffffffffffffffffffffffffffffffffffff891680885290855283872082905594845260018101825590855291842090910180547fffffffffffffffffffffffff0000000000000000000000000000000000000000168317905551909185917f223ed65ee8c25e2e5c9d766412212deb5a8966c1a32b6608f0e65bd7f1ff89359190a3505050565b60116020528160005260406000208181548110610b6457600080fd5b90600052602060002001600091509150505481565b6000828152600c6020526040812054839015801590610beb57506000818152600c60209081526040808320600d835281842033808652935292205482549192918110610bc757610bc7614248565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b80610c19575060008181526008602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b610c7f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d2061646d696e00000000000000000000000000000000000060448201526064016109af565b6012548310610cea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207061636b616765496400000000000000000000000000000060448201526064016109af565b8360128481548110610cfe57610cfe614248565b90600052602060002090600402016000015414610d77576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f70726f6a65637449642f7061636b6167654964206e6f74206d6174636800000060448201526064016109af565b601380546000858152601460209081526040808320805460018082018355828652848620909101869055905482516080810184528a8152808501828152818501878152855196870190955286865260608201959095528754808401895597909552845160049788027f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090810191825594517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a09186015592517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a092909401805496995090969495929490927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001691908490811115610e9357610e93614037565b021790555060608201518051610eb3916003840191602090910190613bf5565b50505082847f89a0f1c8f86fb05b3c1b23526af1722bc1c33495722d3f8c2c6737d9a91f3a9183604051610ee991815260200190565b60405180910390a3505092915050565b6000818152600b602052604090205473ffffffffffffffffffffffffffffffffffffffff163314610f86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f742066726f6d206e6577206f776e6572000000000000000000000000000060448201526064016109af565b600081815260086020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000008082163317909255600b9093529220805490921690915573ffffffffffffffffffffffffffffffffffffffff16610ff1818361341b565b604051339083907fd76f6b3fb9ea3802f0403d54d37db427cea79df08cd8817552eb23790d2b549190600090a35050565b600082815260086020526040902054829073ffffffffffffffffffffffffffffffffffffffff1633146110b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d206f776e657200000000000000000000000000000000000060448201526064016109af565b6000838152600d6020908152604080832073ffffffffffffffffffffffffffffffffffffffff86168452825280832054868452600c9092528220549091906110fb906001906142a6565b9050808210156111ce576000858152600c6020526040812080548390811061112557611125614248565b6000918252602080832090910154888352600d8252604080842073ffffffffffffffffffffffffffffffffffffffff909216808552918352808420879055898452600c9092529120805491925082918590811061118457611184614248565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b6000858152600d6020908152604080832073ffffffffffffffffffffffffffffffffffffffff881684528252808320839055878352600c9091529020805480611219576112196142bd565b60008281526020812082017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90810180547fffffffffffffffffffffffff000000000000000000000000000000000000000016905590910190915560405173ffffffffffffffffffffffffffffffffffffffff86169187917f6f99f547e1793782dd433d72ded398bd72f423ed3fe41650df9b0fae5008f33d9190a35050505050565b6000828152600c602052604090205482901580159061132e57506000818152600c60209081526040808320600d83528184203380865293529220548254919291811061130a5761130a614248565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b8061135c575060008181526008602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b6113c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d2061646d696e00000000000000000000000000000000000060448201526064016109af565b600e54821061142d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f70726f6a656374206e6f7420657869737400000000000000000000000000000060448201526064016109af565b6000600e838154811061144257611442614248565b90600052602060002090600402019050838160000154146114bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f70726f6a65637449642f76657273696f6e496478206e6f74206d61746368000060448201526064016109af565b600160038083015460ff16908111156114da576114da614037565b14611541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6e6f74207061737365640000000000000000000000000000000000000000000060448201526064016109af565b60008481526010602052604080822085905551849186917fce12a0a1daeabf9ebe5a00e3df32cbba26814ed9e3fda6cb763edb4a8048b7aa9190a350505050565b60135483106115ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f696e76616c6964207061636b61676556657273696f6e4964000000000000000060448201526064016109af565b60006013848154811061160257611602614248565b6000918252602082206004909102019150600282015460ff16600481111561162c5761162c614037565b14611693576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6e6f7420696e2070726f6772657373000000000000000000000000000000000060448201526064016109af565b6116a1600382018484613c79565b506116ae81856001613575565b50505050565b3360009081526002602052604090205460ff16611753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f416374696f6e20706572666f726d656420627920756e617574686f72697a656460448201527f20616464726573732e000000000000000000000000000000000000000000000060648201526084016109af565b600e5482106117be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f70726f6a656374206e6f7420657869737400000000000000000000000000000060448201526064016109af565b6000600e83815481106117d3576117d3614248565b600091825260208220600490910201915060038083015460ff16908111156117fd576117fd614037565b14806118215750600160038083015460ff169081111561181f5761181f614037565b145b611887576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f616c72656164792076616c69646174656400000000000000000000000000000060448201526064016109af565b818160030160006101000a81548160ff021916908360038111156118ad576118ad614037565b02179055506003810180547fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000ff166101004267ffffffffffffffff160217905560405183907f8fb3d2700138e890e3916a46bcfa0e4214689900ff36f9a7f7931701352aba369061191e9085906142ec565b60405180910390a2505050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146119d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f416374696f6e20706572666f726d656420627920756e617574686f72697a656460448201527f20616464726573732e000000000000000000000000000000000000000000000060648201526084016109af565b600180546000805473ffffffffffffffffffffffffffffffffffffffff83167fffffffffffffffffffffffff000000000000000000000000000000000000000091821681179092559091169091556040519081527fcfaaa26691e16e66e73290fc725eee1a6b4e0e693a1640484937aac25ffb55a49060200160405180910390a1565b60146020528160005260406000208181548110610b6457600080fd5b60138181548110611a8157600080fd5b60009182526020909120600490910201805460018201546002830154600384018054939550919360ff90911692909190611aba906142fa565b80601f0160208091040260200160405190810160405280929190818152602001828054611ae6906142fa565b8015611b335780601f10611b0857610100808354040283529160200191611b33565b820191906000526020600020905b815481529060010190602001808311611b1657829003601f168201915b5050505050905084565b600e8181548110611b4d57600080fd5b9060005260206000209060040201600091509050806000015490806001015490806002018054611b7c906142fa565b80601f0160208091040260200160405190810160405280929190818152602001828054611ba8906142fa565b8015611bf55780601f10611bca57610100808354040283529160200191611bf5565b820191906000526020600020905b815481529060010190602001808311611bd857829003601f168201915b5050506003909301549192505060ff81169067ffffffffffffffff6101009091041685565b600260035403611c86576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109af565b600260035580611cf2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f616d6f756e74203d20300000000000000000000000000000000000000000000060448201526064016109af565b611cfb816135fb565b33600090815260076020908152604080832086845290915281205491925090611d2590839061434d565b33600090815260076020908152604080832087845282528083208490556006909152812080549293508492909190611d5e90849061434d565b90915550506040805183815260208101839052849133917ff556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c44691015b60405180910390a35050600160035550565b60096020528160005260406000208181548110610b6457600080fd5b600c6020528160005260406000208181548110611de357600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b6000828152600c6020526040902054829015801590611e7e57506000818152600c60209081526040808320600d835281842033808652935292205482549192918110611e5a57611e5a614248565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b80611eac575060008181526008602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b611f12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d2061646d696e00000000000000000000000000000000000060448201526064016109af565b600e548210611f7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f70726f6a656374206e6f7420657869737400000000000000000000000000000060448201526064016109af565b6000600e8381548110611f9257611f92614248565b906000526020600020906004020190508381600001541461200f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f70726f6a65637449642f76657273696f6e496478206e6f74206d61746368000060448201526064016109af565b600381810180547fffffffffffffffffffffffffffffffffffffffffffffff000000000000000000166101004267ffffffffffffffff160217909117905560405183907fb6a63db9aa82b43695f26d08695aedaf8fab7dfb27b4c8c2224ca05540e2ee0590600090a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146120a257600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905590519182527f79ede3839cd7a7d8bd77e97e5c890565fe4f76cdbbeaa364646e28a8695a788491015b60405180910390a150565b600260035403612191576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016109af565b6002600355806121fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f616d6f756e74203d20300000000000000000000000000000000000000000000060448201526064016109af565b3360009081526007602090815260408083208584529091528120546122239083906142a6565b3360009081526007602090815260408083208784528252808320849055600690915281208054929350849290919061225c9084906142a6565b909155506122a3905073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633846137b0565b6040805183815260208101839052849133917ffbd65cfd6de1493db337385c0712095397ecbd0504df64b861cdfceb80c7b4229101611d99565b60005473ffffffffffffffffffffffffffffffffffffffff16331461230157600080fd5b73ffffffffffffffffffffffffffffffffffffffff811660008181526002602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016600117905590519182527f6d81a01b39982517ba331aeb4f387b0f9cc32334b65bb9a343a077973cf7adf5910161211a565b6000838152600c60205260408120548490158015906123f257506000818152600c60209081526040808320600d8352818420338086529352922054825491929181106123ce576123ce614248565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b80612420575060008181526008602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b612486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d2061646d696e00000000000000000000000000000000000060448201526064016109af565b600e54600086815260116020908152604080832080546001810182559084529190922001829055519092508290600f906124c39087908790614365565b9081526040805191829003602090810183209390935560a08201815287825260008881526011845281902054828401528051601f87018490048402810184018252868152600e939183019188908890819084018382808284376000920182905250938552505060209092019150815267ffffffffffffffff421660209182015282546001818101855560009485529382902083516004909202019081558282015193810193909355604082015180519293926125859260028501920190613bf5565b5060608201518160030160006101000a81548160ff021916908360038111156125b0576125b0614037565b021790555060808201518160030160016101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550505081857f3bb2f5276a16ea4f1caf4842dd2f1031f24ea1c20e6d7aa55f52d463e2f08a208686604051612619929190614375565b60405180910390a3509392505050565b6000848152600c602052604090205484901580159061269b57506000818152600c60209081526040808320600d83528184203380865293529220548254919291811061267757612677614248565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b806126c9575060008181526008602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b61272f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d2061646d696e00000000000000000000000000000000000060448201526064016109af565b601254841061279a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e76616c6964207061636b616765496400000000000000000000000000000060448201526064016109af565b6000601285815481106127af576127af614248565b906000526020600020906004020190508581600001541461282c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f70726f6a65637449642f7061636b6167654964206e6f74206d6174636800000060448201526064016109af565b61283a600382018585613c79565b50847f26fb0729afd95719cada7729b90195198a6f35edd9383154a3c42ed9f973911f858560405161286d929190614375565b60405180910390a2505050505050565b600480546040517fb7419ee1000000000000000000000000000000000000000000000000000000008152339281019290925273ffffffffffffffffffffffffffffffffffffffff169063b7419ee190602401602060405180830381865afa1580156128ec573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061291091906143c2565b612976576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6e6f742066726f6d206163746976652061756469746f7200000000000000000060448201526064016109af565b60135481106129e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f696e76616c6964207061636b61676556657273696f6e4964000000000000000060448201526064016109af565b6000601382815481106129f6576129f6614248565b6000918252602090912060049091020190506001600282015460ff166004811115612a2357612a23614037565b14612a8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f7420756e646572206175646974696e67000000000000000000000000000060448201526064016109af565b8054600081815260156020526040902090815560018083015481830155600280840154908301805485949360ff909316927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911690836004811115612af257612af2614037565b02179055506003820181600301908054612b0b906142fa565b612b16929190613d0b565b50905050612b2681836002613575565b5050565b6013548110612b95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f696e76616c6964207061636b61676556657273696f6e4964000000000000000060448201526064016109af565b600060138281548110612baa57612baa614248565b600091825260209091206004918202019150600282015460ff166004811115612bd557612bd5614037565b03612c3c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f616c726561647920766f6964656400000000000000000000000000000000000060448201526064016109af565b60028082015460ff166004811115612c5657612c56614037565b03612ce3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4175646974207061737365642076657273696f6e2063616e6e6f74206265207660448201527f6f6964656400000000000000000000000000000000000000000000000000000060648201526084016109af565b612b2681836004613575565b60128181548110611a8157600080fd5b60166020528160005260406000208181548110610b6457600080fd5b60156020526000908152604090208054600182015460028301546003840180549394929360ff9092169291611aba906142fa565b6000838152600c6020526040812054849015801590612dc157506000818152600c60209081526040808320600d835281842033808652935292205482549192918110612d9d57612d9d614248565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16145b80612def575060008181526008602052604090205473ffffffffffffffffffffffffffffffffffffffff1633145b612e55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d2061646d696e00000000000000000000000000000000000060448201526064016109af565b60128054604080516080810182528881526000602082015291945081016001815260200186868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092018290525093909452505083546001818101865594825260209182902084516004909202019081559083015181850155604083015160028201805494959294919350917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909116908381811115612f1f57612f1f614037565b021790555060608201518051612f3f916003840191602090910190613bf5565b50505060008581526016602090815260408083208054600181018255908452919092200183905551829086907f6ec076b8a6ef2f909920960821b9610ab3674d3aa184964596ebf219374a96b390612f9a9088908890614375565b60405180910390a3612fac8583610b79565b50509392505050565b600480546040517fb7419ee1000000000000000000000000000000000000000000000000000000008152339281019290925273ffffffffffffffffffffffffffffffffffffffff169063b7419ee190602401602060405180830381865afa158015613024573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061304891906143c2565b6130ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f6e6f742066726f6d206163746976652061756469746f7200000000000000000060448201526064016109af565b6013548110613119576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f696e76616c6964207061636b61676556657273696f6e4964000000000000000060448201526064016109af565b60006013828154811061312e5761312e614248565b6000918252602090912060049091020190506001600282015460ff16600481111561315b5761315b614037565b146131c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f6e6f7420756e646572206175646974696e67000000000000000000000000000060448201526064016109af565b612b2681836003613575565b600082815260086020526040902054829073ffffffffffffffffffffffffffffffffffffffff16331461325d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f6e6f742066726f6d206f776e657200000000000000000000000000000000000060448201526064016109af565b506000918252600b602052604090912080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff909216919091179055565b60058054600081815260086020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001633908117909155835260098083528184208054600a85528386208787528552928520839055908352600182018155835290822001829055825491929061332f836143e4565b9091555050604051339082907f4cd47a427b12b78ab498fbe3a9ff5dbad600a7c8580d6305a60c9d9cf78d3e3790600090a3600061336e828585612380565b6000838152601060205260409020555092915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146133a857600080fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527f686a7ab184e6928ddedba810af7b443d6baa40bf32c4787ccd72c5b4b28cae1b9060200161211a565b73ffffffffffffffffffffffffffffffffffffffff82166000818152600a602090815260408083208584528252808320549383526009909152812054613463906001906142a6565b90508082101561350f5773ffffffffffffffffffffffffffffffffffffffff841660009081526009602052604081208054839081106134a4576134a4614248565b600091825260208083209091015473ffffffffffffffffffffffffffffffffffffffff8816808452600a83526040808520838652845280852088905590845260099092529120805491925082918590811061350157613501614248565b600091825260209091200155505b73ffffffffffffffffffffffffffffffffffffffff84166000818152600a6020908152604080832087845282528083208390559282526009905220805480613559576135596142bd565b6001900381819060005260206000200160009055905550505050565b6002830180548291907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360048111156135b4576135b4614037565b02179055508183600001547fecd286616049aec5a52fa7273fbce1b7652affad46cd95c127e03ee4958fec14836040516135ee919061441c565b60405180910390a3505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015613688573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906136ac919061442a565b90506136f073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333085613889565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015281907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561377c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906137a0919061442a565b6137aa91906142a6565b92915050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526138849084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526138e7565b505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526116ae9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401613802565b6000613949826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166139f39092919063ffffffff16565b805190915015613884578080602001905181019061396791906143c2565b613884576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016109af565b6060613a028484600085613a0c565b90505b9392505050565b606082471015613a9e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016109af565b73ffffffffffffffffffffffffffffffffffffffff85163b613b1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109af565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613b459190614443565b60006040518083038185875af1925050503d8060008114613b82576040519150601f19603f3d011682016040523d82523d6000602084013e613b87565b606091505b5091509150613b97828286613ba2565b979650505050505050565b60608315613bb1575081613a05565b825115613bc15782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109af919061445f565b828054613c01906142fa565b90600052602060002090601f016020900481019282613c235760008555613c69565b82601f10613c3c57805160ff1916838001178555613c69565b82800160010185558215613c69579182015b82811115613c69578251825591602001919060010190613c4e565b50613c75929150613d86565b5090565b828054613c85906142fa565b90600052602060002090601f016020900481019282613ca75760008555613c69565b82601f10613cde578280017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00823516178555613c69565b82800160010185558215613c69579182015b82811115613c69578235825591602001919060010190613cf0565b828054613d17906142fa565b90600052602060002090601f016020900481019282613d395760008555613c69565b82601f10613d4a5780548555613c69565b82800160010185558215613c6957600052602060002091601f016020900482015b82811115613c69578254825591600101919060010190613d6b565b5b80821115613c755760008155600101613d87565b803573ffffffffffffffffffffffffffffffffffffffff81168114613dbf57600080fd5b919050565b60008060408385031215613dd757600080fd5b82359150613de760208401613d9b565b90509250929050565b60008060408385031215613e0357600080fd5b50508035926020909101359150565b600060208284031215613e2457600080fd5b5035919050565b60008060408385031215613e3e57600080fd5b613e4783613d9b565b946020939093013593505050565b600060208284031215613e6757600080fd5b613a0582613d9b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600060208284031215613eb157600080fd5b813567ffffffffffffffff80821115613ec957600080fd5b818401915084601f830112613edd57600080fd5b813581811115613eef57613eef613e70565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908382118183101715613f3557613f35613e70565b81604052828152876020848701011115613f4e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008083601f840112613f8057600080fd5b50813567ffffffffffffffff811115613f9857600080fd5b602083019150836020828501011115613fb057600080fd5b9250929050565b600080600060408486031215613fcc57600080fd5b83359250602084013567ffffffffffffffff811115613fea57600080fd5b613ff686828701613f6e565b9497909650939450505050565b6000806040838503121561401657600080fd5b8235915060208301356004811061402c57600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6005811061407657614076614037565b9052565b60005b8381101561409557818101518382015260200161407d565b838111156116ae5750506000910152565b600081518084526140be81602086016020860161407a565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b8481528360208201526141066040820184614066565b60806060820152600061411c60808301846140a6565b9695505050505050565b6004811061407657614076614037565b85815284602082015260a06040820152600061415560a08301866140a6565b90506141646060830185614126565b67ffffffffffffffff831660808301529695505050505050565b6000806000806060858703121561419457600080fd5b8435935060208501359250604085013567ffffffffffffffff8111156141b957600080fd5b6141c587828801613f6e565b95989497509550505050565b8481528360208201526000600284106141ec576141ec614037565b8360408301526080606083015261411c60808301846140a6565b6000806020838503121561421957600080fd5b823567ffffffffffffffff81111561423057600080fd5b61423c85828601613f6e565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000828210156142b8576142b8614277565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b602081016137aa8284614126565b600181811c9082168061430e57607f821691505b602082108103614347577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b6000821982111561436057614360614277565b500190565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f9092017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0160101919050565b6000602082840312156143d457600080fd5b81518015158114613a0557600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361441557614415614277565b5060010190565b602081016137aa8284614066565b60006020828403121561443c57600080fd5b5051919050565b6000825161445581846020870161407a565b9190910192915050565b602081526000613a0560208301846140a656fea26469706673582212209a4a412e740c9e859ff855a56c86b07651e6532dbbefa3fed5e6ae8276da023f64736f6c634300080d0033"
};

// src/contracts/ProjectInfo.ts
var ProjectInfo = class extends import_eth_wallet6.Contract {
  constructor(wallet, address) {
    super(wallet, address, ProjectInfo_json_default.abi, ProjectInfo_json_default.bytecode);
    this.assign();
  }
  deploy(params) {
    return this.__deploy([params.token, params.auditorInfo]);
  }
  parseAddAdminEvent(receipt) {
    return this.parseEvents(receipt, "AddAdmin").map((e) => this.decodeAddAdminEvent(e));
  }
  decodeAddAdminEvent(event) {
    let result = event.data;
    return {
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      admin: result.admin,
      _event: event
    };
  }
  parseAuthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Authorize").map((e) => this.decodeAuthorizeEvent(e));
  }
  decodeAuthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseDeauthorizeEvent(receipt) {
    return this.parseEvents(receipt, "Deauthorize").map((e) => this.decodeDeauthorizeEvent(e));
  }
  decodeDeauthorizeEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseNewPackageEvent(receipt) {
    return this.parseEvents(receipt, "NewPackage").map((e) => this.decodeNewPackageEvent(e));
  }
  decodeNewPackageEvent(event) {
    let result = event.data;
    return {
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      packageId: new import_eth_wallet6.BigNumber(result.packageId),
      ipfsCid: result.ipfsCid,
      _event: event
    };
  }
  parseNewPackageVersionEvent(receipt) {
    return this.parseEvents(receipt, "NewPackageVersion").map((e) => this.decodeNewPackageVersionEvent(e));
  }
  decodeNewPackageVersionEvent(event) {
    let result = event.data;
    return {
      packageId: new import_eth_wallet6.BigNumber(result.packageId),
      packageVersionId: new import_eth_wallet6.BigNumber(result.packageVersionId),
      version: new import_eth_wallet6.BigNumber(result.version),
      _event: event
    };
  }
  parseNewProjectEvent(receipt) {
    return this.parseEvents(receipt, "NewProject").map((e) => this.decodeNewProjectEvent(e));
  }
  decodeNewProjectEvent(event) {
    let result = event.data;
    return {
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      owner: result.owner,
      _event: event
    };
  }
  parseNewProjectVersionEvent(receipt) {
    return this.parseEvents(receipt, "NewProjectVersion").map((e) => this.decodeNewProjectVersionEvent(e));
  }
  decodeNewProjectVersionEvent(event) {
    let result = event.data;
    return {
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      projectVersionIdx: new import_eth_wallet6.BigNumber(result.projectVersionIdx),
      ipfsCid: result.ipfsCid,
      _event: event
    };
  }
  parseRemoveAdminEvent(receipt) {
    return this.parseEvents(receipt, "RemoveAdmin").map((e) => this.decodeRemoveAdminEvent(e));
  }
  decodeRemoveAdminEvent(event) {
    let result = event.data;
    return {
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      admin: result.admin,
      _event: event
    };
  }
  parseSetPackageVersionStatusEvent(receipt) {
    return this.parseEvents(receipt, "SetPackageVersionStatus").map((e) => this.decodeSetPackageVersionStatusEvent(e));
  }
  decodeSetPackageVersionStatusEvent(event) {
    let result = event.data;
    return {
      packageId: new import_eth_wallet6.BigNumber(result.packageId),
      packageVersionId: new import_eth_wallet6.BigNumber(result.packageVersionId),
      status: new import_eth_wallet6.BigNumber(result.status),
      _event: event
    };
  }
  parseSetProjectCurrentVersionEvent(receipt) {
    return this.parseEvents(receipt, "SetProjectCurrentVersion").map((e) => this.decodeSetProjectCurrentVersionEvent(e));
  }
  decodeSetProjectCurrentVersionEvent(event) {
    let result = event.data;
    return {
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      projectVersionIdx: new import_eth_wallet6.BigNumber(result.projectVersionIdx),
      _event: event
    };
  }
  parseStakeEvent(receipt) {
    return this.parseEvents(receipt, "Stake").map((e) => this.decodeStakeEvent(e));
  }
  decodeStakeEvent(event) {
    let result = event.data;
    return {
      sender: result.sender,
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      amount: new import_eth_wallet6.BigNumber(result.amount),
      newBalance: new import_eth_wallet6.BigNumber(result.newBalance),
      _event: event
    };
  }
  parseStartOwnershipTransferEvent(receipt) {
    return this.parseEvents(receipt, "StartOwnershipTransfer").map((e) => this.decodeStartOwnershipTransferEvent(e));
  }
  decodeStartOwnershipTransferEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseTransferOwnershipEvent(receipt) {
    return this.parseEvents(receipt, "TransferOwnership").map((e) => this.decodeTransferOwnershipEvent(e));
  }
  decodeTransferOwnershipEvent(event) {
    let result = event.data;
    return {
      user: result.user,
      _event: event
    };
  }
  parseTransferProjectOwnershipEvent(receipt) {
    return this.parseEvents(receipt, "TransferProjectOwnership").map((e) => this.decodeTransferProjectOwnershipEvent(e));
  }
  decodeTransferProjectOwnershipEvent(event) {
    let result = event.data;
    return {
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      newOwner: result.newOwner,
      _event: event
    };
  }
  parseUnstakeEvent(receipt) {
    return this.parseEvents(receipt, "Unstake").map((e) => this.decodeUnstakeEvent(e));
  }
  decodeUnstakeEvent(event) {
    let result = event.data;
    return {
      sender: result.sender,
      projectId: new import_eth_wallet6.BigNumber(result.projectId),
      amount: new import_eth_wallet6.BigNumber(result.amount),
      newBalance: new import_eth_wallet6.BigNumber(result.newBalance),
      _event: event
    };
  }
  parseUpdatePackageIpfsCidEvent(receipt) {
    return this.parseEvents(receipt, "UpdatePackageIpfsCid").map((e) => this.decodeUpdatePackageIpfsCidEvent(e));
  }
  decodeUpdatePackageIpfsCidEvent(event) {
    let result = event.data;
    return {
      packageId: new import_eth_wallet6.BigNumber(result.packageId),
      ipfsCid: result.ipfsCid,
      _event: event
    };
  }
  parseValidateEvent(receipt) {
    return this.parseEvents(receipt, "Validate").map((e) => this.decodeValidateEvent(e));
  }
  decodeValidateEvent(event) {
    let result = event.data;
    return {
      projectVersionIdx: new import_eth_wallet6.BigNumber(result.projectVersionIdx),
      status: new import_eth_wallet6.BigNumber(result.status),
      _event: event
    };
  }
  parseVoidProjectVersionEvent(receipt) {
    return this.parseEvents(receipt, "VoidProjectVersion").map((e) => this.decodeVoidProjectVersionEvent(e));
  }
  decodeVoidProjectVersionEvent(event) {
    let result = event.data;
    return {
      projectVersionIdx: new import_eth_wallet6.BigNumber(result.projectVersionIdx),
      _event: event
    };
  }
  assign() {
    let auditorInfo_call = async () => {
      let result = await this.call("auditorInfo");
      return result;
    };
    this.auditorInfo = auditorInfo_call;
    let isPermitted_call = async (param1) => {
      let result = await this.call("isPermitted", [param1]);
      return result;
    };
    this.isPermitted = isPermitted_call;
    let latestAuditedPackageVersion_call = async (param1) => {
      let result = await this.call("latestAuditedPackageVersion", [import_eth_wallet6.Utils.toString(param1)]);
      return {
        packageId: new import_eth_wallet6.BigNumber(result.packageId),
        version: new import_eth_wallet6.BigNumber(result.version),
        status: new import_eth_wallet6.BigNumber(result.status),
        ipfsCid: result.ipfsCid
      };
    };
    this.latestAuditedPackageVersion = latestAuditedPackageVersion_call;
    let newOwner_call = async () => {
      let result = await this.call("newOwner");
      return result;
    };
    this.newOwner = newOwner_call;
    let owner_call = async () => {
      let result = await this.call("owner");
      return result;
    };
    this.owner = owner_call;
    let ownersProjectsParams = (params) => [params.param1, import_eth_wallet6.Utils.toString(params.param2)];
    let ownersProjects_call = async (params) => {
      let result = await this.call("ownersProjects", ownersProjectsParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.ownersProjects = ownersProjects_call;
    let ownersProjectsInvParams = (params) => [params.param1, import_eth_wallet6.Utils.toString(params.param2)];
    let ownersProjectsInv_call = async (params) => {
      let result = await this.call("ownersProjectsInv", ownersProjectsInvParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.ownersProjectsInv = ownersProjectsInv_call;
    let ownersProjectsLength_call = async (owner) => {
      let result = await this.call("ownersProjectsLength", [owner]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.ownersProjectsLength = ownersProjectsLength_call;
    let packageVersions_call = async (param1) => {
      let result = await this.call("packageVersions", [import_eth_wallet6.Utils.toString(param1)]);
      return {
        packageId: new import_eth_wallet6.BigNumber(result.packageId),
        version: new import_eth_wallet6.BigNumber(result.version),
        status: new import_eth_wallet6.BigNumber(result.status),
        ipfsCid: result.ipfsCid
      };
    };
    this.packageVersions = packageVersions_call;
    let packageVersionsLength_call = async () => {
      let result = await this.call("packageVersionsLength");
      return new import_eth_wallet6.BigNumber(result);
    };
    this.packageVersionsLength = packageVersionsLength_call;
    let packageVersionsListParams = (params) => [import_eth_wallet6.Utils.toString(params.param1), import_eth_wallet6.Utils.toString(params.param2)];
    let packageVersionsList_call = async (params) => {
      let result = await this.call("packageVersionsList", packageVersionsListParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.packageVersionsList = packageVersionsList_call;
    let packageVersionsListLength_call = async (packageId) => {
      let result = await this.call("packageVersionsListLength", [import_eth_wallet6.Utils.toString(packageId)]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.packageVersionsListLength = packageVersionsListLength_call;
    let packages_call = async (param1) => {
      let result = await this.call("packages", [import_eth_wallet6.Utils.toString(param1)]);
      return {
        projectId: new import_eth_wallet6.BigNumber(result.projectId),
        currVersionIndex: new import_eth_wallet6.BigNumber(result.currVersionIndex),
        status: new import_eth_wallet6.BigNumber(result.status),
        ipfsCid: result.ipfsCid
      };
    };
    this.packages = packages_call;
    let packagesLength_call = async () => {
      let result = await this.call("packagesLength");
      return new import_eth_wallet6.BigNumber(result);
    };
    this.packagesLength = packagesLength_call;
    let projectAdminParams = (params) => [import_eth_wallet6.Utils.toString(params.param1), import_eth_wallet6.Utils.toString(params.param2)];
    let projectAdmin_call = async (params) => {
      let result = await this.call("projectAdmin", projectAdminParams(params));
      return result;
    };
    this.projectAdmin = projectAdmin_call;
    let projectAdminInvParams = (params) => [import_eth_wallet6.Utils.toString(params.param1), params.param2];
    let projectAdminInv_call = async (params) => {
      let result = await this.call("projectAdminInv", projectAdminInvParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectAdminInv = projectAdminInv_call;
    let projectAdminLength_call = async (projectId) => {
      let result = await this.call("projectAdminLength", [import_eth_wallet6.Utils.toString(projectId)]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectAdminLength = projectAdminLength_call;
    let projectBackerBalanceParams = (params) => [params.param1, import_eth_wallet6.Utils.toString(params.param2)];
    let projectBackerBalance_call = async (params) => {
      let result = await this.call("projectBackerBalance", projectBackerBalanceParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectBackerBalance = projectBackerBalance_call;
    let projectBalance_call = async (param1) => {
      let result = await this.call("projectBalance", [import_eth_wallet6.Utils.toString(param1)]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectBalance = projectBalance_call;
    let projectCount_call = async () => {
      let result = await this.call("projectCount");
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectCount = projectCount_call;
    let projectCurrentVersion_call = async (param1) => {
      let result = await this.call("projectCurrentVersion", [import_eth_wallet6.Utils.toString(param1)]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectCurrentVersion = projectCurrentVersion_call;
    let projectNewOwner_call = async (param1) => {
      let result = await this.call("projectNewOwner", [import_eth_wallet6.Utils.toString(param1)]);
      return result;
    };
    this.projectNewOwner = projectNewOwner_call;
    let projectOwner_call = async (param1) => {
      let result = await this.call("projectOwner", [import_eth_wallet6.Utils.toString(param1)]);
      return result;
    };
    this.projectOwner = projectOwner_call;
    let projectPackagesParams = (params) => [import_eth_wallet6.Utils.toString(params.param1), import_eth_wallet6.Utils.toString(params.param2)];
    let projectPackages_call = async (params) => {
      let result = await this.call("projectPackages", projectPackagesParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectPackages = projectPackages_call;
    let projectPackagesInvParams = (params) => [import_eth_wallet6.Utils.toString(params.param1), import_eth_wallet6.Utils.toString(params.param2)];
    let projectPackagesInv_call = async (params) => {
      let result = await this.call("projectPackagesInv", projectPackagesInvParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectPackagesInv = projectPackagesInv_call;
    let projectPackagesLength_call = async (projectId) => {
      let result = await this.call("projectPackagesLength", [import_eth_wallet6.Utils.toString(projectId)]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectPackagesLength = projectPackagesLength_call;
    let projectVersionListParams = (params) => [import_eth_wallet6.Utils.toString(params.param1), import_eth_wallet6.Utils.toString(params.param2)];
    let projectVersionList_call = async (params) => {
      let result = await this.call("projectVersionList", projectVersionListParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectVersionList = projectVersionList_call;
    let projectVersionListLength_call = async (projectId) => {
      let result = await this.call("projectVersionListLength", [import_eth_wallet6.Utils.toString(projectId)]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectVersionListLength = projectVersionListLength_call;
    let projectVersions_call = async (param1) => {
      let result = await this.call("projectVersions", [import_eth_wallet6.Utils.toString(param1)]);
      return {
        projectId: new import_eth_wallet6.BigNumber(result.projectId),
        version: new import_eth_wallet6.BigNumber(result.version),
        ipfsCid: result.ipfsCid,
        status: new import_eth_wallet6.BigNumber(result.status),
        lastModifiedDate: new import_eth_wallet6.BigNumber(result.lastModifiedDate)
      };
    };
    this.projectVersions = projectVersions_call;
    let projectVersionsInv_call = async (param1) => {
      let result = await this.call("projectVersionsInv", [param1]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectVersionsInv = projectVersionsInv_call;
    let projectVersionsLength_call = async () => {
      let result = await this.call("projectVersionsLength");
      return new import_eth_wallet6.BigNumber(result);
    };
    this.projectVersionsLength = projectVersionsLength_call;
    let token_call = async () => {
      let result = await this.call("token");
      return result;
    };
    this.token = token_call;
    let addProjectAdminParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), params.admin];
    let addProjectAdmin_send = async (params) => {
      let result = await this.send("addProjectAdmin", addProjectAdminParams(params));
      return result;
    };
    let addProjectAdmin_call = async (params) => {
      let result = await this.call("addProjectAdmin", addProjectAdminParams(params));
      return;
    };
    this.addProjectAdmin = Object.assign(addProjectAdmin_send, {
      call: addProjectAdmin_call
    });
    let deny_send = async (user) => {
      let result = await this.send("deny", [user]);
      return result;
    };
    let deny_call = async (user) => {
      let result = await this.call("deny", [user]);
      return;
    };
    this.deny = Object.assign(deny_send, {
      call: deny_call
    });
    let newPackageParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), params.ipfsCid];
    let newPackage_send = async (params) => {
      let result = await this.send("newPackage", newPackageParams(params));
      return result;
    };
    let newPackage_call = async (params) => {
      let result = await this.call("newPackage", newPackageParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.newPackage = Object.assign(newPackage_send, {
      call: newPackage_call
    });
    let newPackageVersionParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), import_eth_wallet6.Utils.toString(params.packageId)];
    let newPackageVersion_send = async (params) => {
      let result = await this.send("newPackageVersion", newPackageVersionParams(params));
      return result;
    };
    let newPackageVersion_call = async (params) => {
      let result = await this.call("newPackageVersion", newPackageVersionParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.newPackageVersion = Object.assign(newPackageVersion_send, {
      call: newPackageVersion_call
    });
    let newProject_send = async (ipfsCid) => {
      let result = await this.send("newProject", [ipfsCid]);
      return result;
    };
    let newProject_call = async (ipfsCid) => {
      let result = await this.call("newProject", [ipfsCid]);
      return new import_eth_wallet6.BigNumber(result);
    };
    this.newProject = Object.assign(newProject_send, {
      call: newProject_call
    });
    let newProjectVersionParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), params.ipfsCid];
    let newProjectVersion_send = async (params) => {
      let result = await this.send("newProjectVersion", newProjectVersionParams(params));
      return result;
    };
    let newProjectVersion_call = async (params) => {
      let result = await this.call("newProjectVersion", newProjectVersionParams(params));
      return new import_eth_wallet6.BigNumber(result);
    };
    this.newProjectVersion = Object.assign(newProjectVersion_send, {
      call: newProjectVersion_call
    });
    let permit_send = async (user) => {
      let result = await this.send("permit", [user]);
      return result;
    };
    let permit_call = async (user) => {
      let result = await this.call("permit", [user]);
      return;
    };
    this.permit = Object.assign(permit_send, {
      call: permit_call
    });
    let removeProjectAdminParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), params.admin];
    let removeProjectAdmin_send = async (params) => {
      let result = await this.send("removeProjectAdmin", removeProjectAdminParams(params));
      return result;
    };
    let removeProjectAdmin_call = async (params) => {
      let result = await this.call("removeProjectAdmin", removeProjectAdminParams(params));
      return;
    };
    this.removeProjectAdmin = Object.assign(removeProjectAdmin_send, {
      call: removeProjectAdmin_call
    });
    let setPackageVersionToAuditFailed_send = async (packageVersionId) => {
      let result = await this.send("setPackageVersionToAuditFailed", [import_eth_wallet6.Utils.toString(packageVersionId)]);
      return result;
    };
    let setPackageVersionToAuditFailed_call = async (packageVersionId) => {
      let result = await this.call("setPackageVersionToAuditFailed", [import_eth_wallet6.Utils.toString(packageVersionId)]);
      return;
    };
    this.setPackageVersionToAuditFailed = Object.assign(setPackageVersionToAuditFailed_send, {
      call: setPackageVersionToAuditFailed_call
    });
    let setPackageVersionToAuditPassed_send = async (packageVersionId) => {
      let result = await this.send("setPackageVersionToAuditPassed", [import_eth_wallet6.Utils.toString(packageVersionId)]);
      return result;
    };
    let setPackageVersionToAuditPassed_call = async (packageVersionId) => {
      let result = await this.call("setPackageVersionToAuditPassed", [import_eth_wallet6.Utils.toString(packageVersionId)]);
      return;
    };
    this.setPackageVersionToAuditPassed = Object.assign(setPackageVersionToAuditPassed_send, {
      call: setPackageVersionToAuditPassed_call
    });
    let setPackageVersionToAuditingParams = (params) => [import_eth_wallet6.Utils.toString(params.packageVersionId), params.ipfsCid];
    let setPackageVersionToAuditing_send = async (params) => {
      let result = await this.send("setPackageVersionToAuditing", setPackageVersionToAuditingParams(params));
      return result;
    };
    let setPackageVersionToAuditing_call = async (params) => {
      let result = await this.call("setPackageVersionToAuditing", setPackageVersionToAuditingParams(params));
      return;
    };
    this.setPackageVersionToAuditing = Object.assign(setPackageVersionToAuditing_send, {
      call: setPackageVersionToAuditing_call
    });
    let setProjectCurrentVersionParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), import_eth_wallet6.Utils.toString(params.versionIdx)];
    let setProjectCurrentVersion_send = async (params) => {
      let result = await this.send("setProjectCurrentVersion", setProjectCurrentVersionParams(params));
      return result;
    };
    let setProjectCurrentVersion_call = async (params) => {
      let result = await this.call("setProjectCurrentVersion", setProjectCurrentVersionParams(params));
      return;
    };
    this.setProjectCurrentVersion = Object.assign(setProjectCurrentVersion_send, {
      call: setProjectCurrentVersion_call
    });
    let stakeParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), import_eth_wallet6.Utils.toString(params.amount)];
    let stake_send = async (params) => {
      let result = await this.send("stake", stakeParams(params));
      return result;
    };
    let stake_call = async (params) => {
      let result = await this.call("stake", stakeParams(params));
      return;
    };
    this.stake = Object.assign(stake_send, {
      call: stake_call
    });
    let takeOwnership_send = async () => {
      let result = await this.send("takeOwnership");
      return result;
    };
    let takeOwnership_call = async () => {
      let result = await this.call("takeOwnership");
      return;
    };
    this.takeOwnership = Object.assign(takeOwnership_send, {
      call: takeOwnership_call
    });
    let takeProjectOwnership_send = async (projectId) => {
      let result = await this.send("takeProjectOwnership", [import_eth_wallet6.Utils.toString(projectId)]);
      return result;
    };
    let takeProjectOwnership_call = async (projectId) => {
      let result = await this.call("takeProjectOwnership", [import_eth_wallet6.Utils.toString(projectId)]);
      return;
    };
    this.takeProjectOwnership = Object.assign(takeProjectOwnership_send, {
      call: takeProjectOwnership_call
    });
    let transferOwnership_send = async (newOwner) => {
      let result = await this.send("transferOwnership", [newOwner]);
      return result;
    };
    let transferOwnership_call = async (newOwner) => {
      let result = await this.call("transferOwnership", [newOwner]);
      return;
    };
    this.transferOwnership = Object.assign(transferOwnership_send, {
      call: transferOwnership_call
    });
    let transferProjectOwnershipParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), params.newOwner];
    let transferProjectOwnership_send = async (params) => {
      let result = await this.send("transferProjectOwnership", transferProjectOwnershipParams(params));
      return result;
    };
    let transferProjectOwnership_call = async (params) => {
      let result = await this.call("transferProjectOwnership", transferProjectOwnershipParams(params));
      return;
    };
    this.transferProjectOwnership = Object.assign(transferProjectOwnership_send, {
      call: transferProjectOwnership_call
    });
    let unstakeParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), import_eth_wallet6.Utils.toString(params.amount)];
    let unstake_send = async (params) => {
      let result = await this.send("unstake", unstakeParams(params));
      return result;
    };
    let unstake_call = async (params) => {
      let result = await this.call("unstake", unstakeParams(params));
      return;
    };
    this.unstake = Object.assign(unstake_send, {
      call: unstake_call
    });
    let updatePackageIpfsCidParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), import_eth_wallet6.Utils.toString(params.packageId), params.ipfsCid];
    let updatePackageIpfsCid_send = async (params) => {
      let result = await this.send("updatePackageIpfsCid", updatePackageIpfsCidParams(params));
      return result;
    };
    let updatePackageIpfsCid_call = async (params) => {
      let result = await this.call("updatePackageIpfsCid", updatePackageIpfsCidParams(params));
      return;
    };
    this.updatePackageIpfsCid = Object.assign(updatePackageIpfsCid_send, {
      call: updatePackageIpfsCid_call
    });
    let validateProjectParams = (params) => [import_eth_wallet6.Utils.toString(params.projectVersionIdx), import_eth_wallet6.Utils.toString(params.status)];
    let validateProject_send = async (params) => {
      let result = await this.send("validateProject", validateProjectParams(params));
      return result;
    };
    let validateProject_call = async (params) => {
      let result = await this.call("validateProject", validateProjectParams(params));
      return;
    };
    this.validateProject = Object.assign(validateProject_send, {
      call: validateProject_call
    });
    let voidPackageVersion_send = async (packageVersionId) => {
      let result = await this.send("voidPackageVersion", [import_eth_wallet6.Utils.toString(packageVersionId)]);
      return result;
    };
    let voidPackageVersion_call = async (packageVersionId) => {
      let result = await this.call("voidPackageVersion", [import_eth_wallet6.Utils.toString(packageVersionId)]);
      return;
    };
    this.voidPackageVersion = Object.assign(voidPackageVersion_send, {
      call: voidPackageVersion_call
    });
    let voidProjectVersionParams = (params) => [import_eth_wallet6.Utils.toString(params.projectId), import_eth_wallet6.Utils.toString(params.versionIdx)];
    let voidProjectVersion_send = async (params) => {
      let result = await this.send("voidProjectVersion", voidProjectVersionParams(params));
      return result;
    };
    let voidProjectVersion_call = async (params) => {
      let result = await this.call("voidProjectVersion", voidProjectVersionParams(params));
      return;
    };
    this.voidProjectVersion = Object.assign(voidProjectVersion_send, {
      call: voidProjectVersion_call
    });
  }
};

// src/contracts/Scom.ts
var import_eth_wallet7 = __toModule(require("@ijstech/eth-wallet"));

// src/contracts/Scom.json.ts
var Scom_json_default = {
  "abi": [
    { "inputs": [{ "internalType": "address", "name": "_minter", "type": "address" }, { "internalType": "address", "name": "initSupplyTo", "type": "address" }, { "internalType": "uint256", "name": "initSupply", "type": "uint256" }, { "internalType": "uint256", "name": "totalSupply", "type": "uint256" }], "stateMutability": "nonpayable", "type": "constructor" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "owner", "type": "address" }, { "indexed": true, "internalType": "address", "name": "spender", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Approval", "type": "event" },
    { "anonymous": false, "inputs": [{ "indexed": true, "internalType": "address", "name": "from", "type": "address" }, { "indexed": true, "internalType": "address", "name": "to", "type": "address" }, { "indexed": false, "internalType": "uint256", "name": "value", "type": "uint256" }], "name": "Transfer", "type": "event" },
    { "inputs": [{ "internalType": "address", "name": "owner", "type": "address" }, { "internalType": "address", "name": "spender", "type": "address" }], "name": "allowance", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "approve", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }], "name": "balanceOf", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "cap", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "decimals", "outputs": [{ "internalType": "uint8", "name": "", "type": "uint8" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "subtractedValue", "type": "uint256" }], "name": "decreaseAllowance", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "spender", "type": "address" }, { "internalType": "uint256", "name": "addedValue", "type": "uint256" }], "name": "increaseAllowance", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "account", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "mint", "outputs": [], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [], "name": "minter", "outputs": [{ "internalType": "address", "name": "", "type": "address" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "name", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "symbol", "outputs": [{ "internalType": "string", "name": "", "type": "string" }], "stateMutability": "view", "type": "function" },
    { "inputs": [], "name": "totalSupply", "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }], "stateMutability": "view", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "transfer", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" },
    { "inputs": [{ "internalType": "address", "name": "from", "type": "address" }, { "internalType": "address", "name": "to", "type": "address" }, { "internalType": "uint256", "name": "amount", "type": "uint256" }], "name": "transferFrom", "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }], "stateMutability": "nonpayable", "type": "function" }
  ],
  "bytecode": ""
};

// src/contracts/Scom.ts
var Scom = class extends import_eth_wallet7.Contract {
  constructor(wallet, address) {
    super(wallet, address, Scom_json_default.abi, Scom_json_default.bytecode);
    this.assign();
  }
  deploy(params) {
    return this.__deploy([params.minter, params.initSupplyTo, import_eth_wallet7.Utils.toString(params.initSupply), import_eth_wallet7.Utils.toString(params.totalSupply)]);
  }
  parseApprovalEvent(receipt) {
    return this.parseEvents(receipt, "Approval").map((e) => this.decodeApprovalEvent(e));
  }
  decodeApprovalEvent(event) {
    let result = event.data;
    return {
      owner: result.owner,
      spender: result.spender,
      value: new import_eth_wallet7.BigNumber(result.value),
      _event: event
    };
  }
  parseTransferEvent(receipt) {
    return this.parseEvents(receipt, "Transfer").map((e) => this.decodeTransferEvent(e));
  }
  decodeTransferEvent(event) {
    let result = event.data;
    return {
      from: result.from,
      to: result.to,
      value: new import_eth_wallet7.BigNumber(result.value),
      _event: event
    };
  }
  assign() {
    let allowanceParams = (params) => [params.owner, params.spender];
    let allowance_call = async (params) => {
      let result = await this.call("allowance", allowanceParams(params));
      return new import_eth_wallet7.BigNumber(result);
    };
    this.allowance = allowance_call;
    let balanceOf_call = async (account) => {
      let result = await this.call("balanceOf", [account]);
      return new import_eth_wallet7.BigNumber(result);
    };
    this.balanceOf = balanceOf_call;
    let cap_call = async () => {
      let result = await this.call("cap");
      return new import_eth_wallet7.BigNumber(result);
    };
    this.cap = cap_call;
    let decimals_call = async () => {
      let result = await this.call("decimals");
      return new import_eth_wallet7.BigNumber(result);
    };
    this.decimals = decimals_call;
    let minter_call = async () => {
      let result = await this.call("minter");
      return result;
    };
    this.minter = minter_call;
    let name_call = async () => {
      let result = await this.call("name");
      return result;
    };
    this.name = name_call;
    let symbol_call = async () => {
      let result = await this.call("symbol");
      return result;
    };
    this.symbol = symbol_call;
    let totalSupply_call = async () => {
      let result = await this.call("totalSupply");
      return new import_eth_wallet7.BigNumber(result);
    };
    this.totalSupply = totalSupply_call;
    let approveParams = (params) => [params.spender, import_eth_wallet7.Utils.toString(params.amount)];
    let approve_send = async (params) => {
      let result = await this.send("approve", approveParams(params));
      return result;
    };
    let approve_call = async (params) => {
      let result = await this.call("approve", approveParams(params));
      return result;
    };
    this.approve = Object.assign(approve_send, {
      call: approve_call
    });
    let decreaseAllowanceParams = (params) => [params.spender, import_eth_wallet7.Utils.toString(params.subtractedValue)];
    let decreaseAllowance_send = async (params) => {
      let result = await this.send("decreaseAllowance", decreaseAllowanceParams(params));
      return result;
    };
    let decreaseAllowance_call = async (params) => {
      let result = await this.call("decreaseAllowance", decreaseAllowanceParams(params));
      return result;
    };
    this.decreaseAllowance = Object.assign(decreaseAllowance_send, {
      call: decreaseAllowance_call
    });
    let increaseAllowanceParams = (params) => [params.spender, import_eth_wallet7.Utils.toString(params.addedValue)];
    let increaseAllowance_send = async (params) => {
      let result = await this.send("increaseAllowance", increaseAllowanceParams(params));
      return result;
    };
    let increaseAllowance_call = async (params) => {
      let result = await this.call("increaseAllowance", increaseAllowanceParams(params));
      return result;
    };
    this.increaseAllowance = Object.assign(increaseAllowance_send, {
      call: increaseAllowance_call
    });
    let mintParams = (params) => [params.account, import_eth_wallet7.Utils.toString(params.amount)];
    let mint_send = async (params) => {
      let result = await this.send("mint", mintParams(params));
      return result;
    };
    let mint_call = async (params) => {
      let result = await this.call("mint", mintParams(params));
      return;
    };
    this.mint = Object.assign(mint_send, {
      call: mint_call
    });
    let transferParams = (params) => [params.to, import_eth_wallet7.Utils.toString(params.amount)];
    let transfer_send = async (params) => {
      let result = await this.send("transfer", transferParams(params));
      return result;
    };
    let transfer_call = async (params) => {
      let result = await this.call("transfer", transferParams(params));
      return result;
    };
    this.transfer = Object.assign(transfer_send, {
      call: transfer_call
    });
    let transferFromParams = (params) => [params.from, params.to, import_eth_wallet7.Utils.toString(params.amount)];
    let transferFrom_send = async (params) => {
      let result = await this.send("transferFrom", transferFromParams(params));
      return result;
    };
    let transferFrom_call = async (params) => {
      let result = await this.call("transferFrom", transferFromParams(params));
      return result;
    };
    this.transferFrom = Object.assign(transferFrom_send, {
      call: transferFrom_call
    });
  }
};

})